[pytest]
# Pytest Configuration

# Test discovery
python_files = test_*.py
python_classes = Test*
python_functions = test_*
testpaths = tests

# Output options
addopts =
    # Coverage
    --cov=src
    --cov-report=html
    --cov-report=term-missing
    --cov-report=json
    --cov-branch
    # Fail if coverage below threshold
    --cov-fail-under=75
    # Show test summary
    -ra
    # Strict markers
    --strict-markers
    # Show local variables in tracebacks
    -l
    # Verbose output
    -v
    # Show slowest tests
    --durations=10
    # Warnings
    -W error::DeprecationWarning
    -W error::PendingDeprecationWarning
    # Async
    --asyncio-mode=auto

# Markers for organizing tests
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, external deps)
    slow: Slow tests (performance, stress tests)
    grpc: gRPC service tests
    llm: Tests requiring LLM/API (may be expensive)
    property: Property-based tests with hypothesis
    benchmark: Performance benchmark tests

# Async configuration
asyncio_mode = auto

# Coverage configuration
[coverage:run]
source = src
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */ai_pb2.py
    */ai_pb2_grpc.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    @abc.abstractmethod
    @overload

precision = 2
show_missing = True

[coverage:html]
directory = htmlcov

