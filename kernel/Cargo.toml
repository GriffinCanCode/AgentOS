[package]
name = "ai-os-kernel"
version = "0.1.0"
edition = "2021"

[lib]
name = "ai_os_kernel"
path = "src/lib.rs"

[[bin]]
name = "kernel"
path = "src/main.rs"

[dependencies]
# Async runtime - only include features we actually use
tokio = { version = "1.35", features = ["rt-multi-thread", "macros", "sync", "time", "net", "io-util", "signal", "fs"] }
tokio-stream = { version = "0.1", default-features = false, features = ["sync"] }
futures = { version = "0.3", default-features = false, features = ["std"] }
async-stream = "0.3"

# gRPC
tonic = { version = "0.11", default-features = false, features = ["transport", "codegen", "prost"] }
prost = "0.12"

# UUID generation - fast rng only
uuid = { version = "1.6", features = ["v4", "fast-rng"] }

# Serialization
serde = { version = "1.0", features = ["derive", "rc"] }
serde_json = { version = "1.0", default-features = false, features = ["std"] }
simd-json = { version = "0.13", default-features = false, features = ["serde_impl"] }
bincode = "1.3"
serde_with = { version = "3.11", features = ["time_0_3", "macros"] }
time = { version = "0.3", default-features = false, features = ["serde", "macros", "std"] }

# Concurrency
parking_lot = "0.12"
parking_lot_core = "0.9"
dashmap = { version = "5.5", default-features = false }
ahash = "0.8"
ringbuf = "0.4"
flume = "0.11"
crossbeam-queue = "0.3"  # Lock-free queues for hot paths

# Structured logging
tracing = { version = "0.1", default-features = false, features = ["std", "attributes"] }
tracing-subscriber = { version = "0.3", default-features = false, features = ["env-filter", "json", "fmt", "ansi"] }

# Error handling
thiserror = "1.0"
anyhow = { version = "1.0", default-features = false, features = ["std"] }
miette = { version = "7.0", features = ["fancy"] }

# Logging
log = "0.4"
env_logger = { version = "0.11", default-features = false }

# Network namespace isolation (Linux-specific)
nix = { version = "0.29", default-features = false, features = ["sched", "net", "user", "signal"] }

# HTTP client - minimal features
reqwest = { version = "0.12", default-features = false, features = ["blocking", "json", "gzip", "rustls-tls"] }

# Path utilities
path-clean = "1.0"

[target.'cfg(target_os = "linux")'.dependencies]
rtnetlink = { version = "0.14", default-features = false }
ipnetwork = { version = "0.20", default-features = false }
netlink-packet-route = { version = "0.19", default-features = false }

[build-dependencies]
tonic-build = "0.11"

[dev-dependencies]
tokio-test = { version = "0.4", default-features = false }
proptest = { version = "1.4", default-features = false, features = ["std"] }
mockall = { version = "0.12", default-features = false }
tempfile = "3.8"
serial_test = { version = "3.0", default-features = false }
futures = { version = "0.3", default-features = false, features = ["std"] }
rand = { version = "0.8", default-features = false, features = ["std", "std_rng"] }
criterion = { version = "0.5", default-features = false, features = ["html_reports"] }
pretty_assertions = "1.4"

[[bench]]
name = "json_benchmark"
harness = false

[[bench]]
name = "bincode_benchmark"
harness = false

[[bench]]
name = "sync_benchmark"
harness = false

# Development profile - optimized for build speed
[profile.dev]
# Optimize dependencies in dev builds (faster runtime, still fast incremental builds)
opt-level = 0
# Split debuginfo for faster linking on macOS
split-debuginfo = "unpacked"
# Enable incremental compilation
incremental = true

# Release profile - optimized for performance
[profile.release]
opt-level = 3
lto = true
codegen-units = 1

# Fast development profile for quick iterations
[profile.dev-fast]
inherits = "dev"
opt-level = 1
incremental = true
debug = 1  # Reduced debug info

# Optimize all dependencies even in dev mode
[profile.dev.package."*"]
opt-level = 1
