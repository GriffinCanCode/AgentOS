// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.3
// source: kernel.proto

package kernel

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SandboxLevel int32

const (
	SandboxLevel_MINIMAL    SandboxLevel = 0
	SandboxLevel_STANDARD   SandboxLevel = 1
	SandboxLevel_PRIVILEGED SandboxLevel = 2
)

// Enum value maps for SandboxLevel.
var (
	SandboxLevel_name = map[int32]string{
		0: "MINIMAL",
		1: "STANDARD",
		2: "PRIVILEGED",
	}
	SandboxLevel_value = map[string]int32{
		"MINIMAL":    0,
		"STANDARD":   1,
		"PRIVILEGED": 2,
	}
)

func (x SandboxLevel) Enum() *SandboxLevel {
	p := new(SandboxLevel)
	*p = x
	return p
}

func (x SandboxLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SandboxLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_kernel_proto_enumTypes[0].Descriptor()
}

func (SandboxLevel) Type() protoreflect.EnumType {
	return &file_kernel_proto_enumTypes[0]
}

func (x SandboxLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SandboxLevel.Descriptor instead.
func (SandboxLevel) EnumDescriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{0}
}

type Capability int32

const (
	Capability_READ_FILE       Capability = 0
	Capability_WRITE_FILE      Capability = 1
	Capability_CREATE_FILE     Capability = 2
	Capability_DELETE_FILE     Capability = 3
	Capability_LIST_DIRECTORY  Capability = 4
	Capability_SPAWN_PROCESS   Capability = 5
	Capability_KILL_PROCESS    Capability = 6
	Capability_NETWORK_ACCESS  Capability = 7
	Capability_BIND_PORT       Capability = 8
	Capability_SYSTEM_INFO     Capability = 9
	Capability_TIME_ACCESS     Capability = 10
	Capability_SEND_MESSAGE    Capability = 11
	Capability_RECEIVE_MESSAGE Capability = 12
)

// Enum value maps for Capability.
var (
	Capability_name = map[int32]string{
		0:  "READ_FILE",
		1:  "WRITE_FILE",
		2:  "CREATE_FILE",
		3:  "DELETE_FILE",
		4:  "LIST_DIRECTORY",
		5:  "SPAWN_PROCESS",
		6:  "KILL_PROCESS",
		7:  "NETWORK_ACCESS",
		8:  "BIND_PORT",
		9:  "SYSTEM_INFO",
		10: "TIME_ACCESS",
		11: "SEND_MESSAGE",
		12: "RECEIVE_MESSAGE",
	}
	Capability_value = map[string]int32{
		"READ_FILE":       0,
		"WRITE_FILE":      1,
		"CREATE_FILE":     2,
		"DELETE_FILE":     3,
		"LIST_DIRECTORY":  4,
		"SPAWN_PROCESS":   5,
		"KILL_PROCESS":    6,
		"NETWORK_ACCESS":  7,
		"BIND_PORT":       8,
		"SYSTEM_INFO":     9,
		"TIME_ACCESS":     10,
		"SEND_MESSAGE":    11,
		"RECEIVE_MESSAGE": 12,
	}
)

func (x Capability) Enum() *Capability {
	p := new(Capability)
	*p = x
	return p
}

func (x Capability) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Capability) Descriptor() protoreflect.EnumDescriptor {
	return file_kernel_proto_enumTypes[1].Descriptor()
}

func (Capability) Type() protoreflect.EnumType {
	return &file_kernel_proto_enumTypes[1]
}

func (x Capability) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Capability.Descriptor instead.
func (Capability) EnumDescriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{1}
}

type SyscallRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Pid   uint32                 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	// Types that are valid to be assigned to Syscall:
	//
	//	*SyscallRequest_ReadFile
	//	*SyscallRequest_WriteFile
	//	*SyscallRequest_CreateFile
	//	*SyscallRequest_DeleteFile
	//	*SyscallRequest_ListDirectory
	//	*SyscallRequest_FileExists
	//	*SyscallRequest_FileStat
	//	*SyscallRequest_MoveFile
	//	*SyscallRequest_CopyFile
	//	*SyscallRequest_CreateDirectory
	//	*SyscallRequest_SpawnProcess
	//	*SyscallRequest_KillProcess
	//	*SyscallRequest_GetSystemInfo
	//	*SyscallRequest_GetCurrentTime
	//	*SyscallRequest_GetEnvVar
	//	*SyscallRequest_NetworkRequest
	//	*SyscallRequest_CreatePipe
	//	*SyscallRequest_WritePipe
	//	*SyscallRequest_ReadPipe
	//	*SyscallRequest_ClosePipe
	//	*SyscallRequest_DestroyPipe
	//	*SyscallRequest_PipeStats
	//	*SyscallRequest_CreateShm
	//	*SyscallRequest_AttachShm
	//	*SyscallRequest_DetachShm
	//	*SyscallRequest_WriteShm
	//	*SyscallRequest_ReadShm
	//	*SyscallRequest_DestroyShm
	//	*SyscallRequest_ShmStats
	//	*SyscallRequest_ScheduleNext
	//	*SyscallRequest_YieldProcess
	//	*SyscallRequest_GetCurrentScheduled
	//	*SyscallRequest_GetSchedulerStats
	Syscall       isSyscallRequest_Syscall `protobuf_oneof:"syscall"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyscallRequest) Reset() {
	*x = SyscallRequest{}
	mi := &file_kernel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyscallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyscallRequest) ProtoMessage() {}

func (x *SyscallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyscallRequest.ProtoReflect.Descriptor instead.
func (*SyscallRequest) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{0}
}

func (x *SyscallRequest) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *SyscallRequest) GetSyscall() isSyscallRequest_Syscall {
	if x != nil {
		return x.Syscall
	}
	return nil
}

func (x *SyscallRequest) GetReadFile() *ReadFileCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_ReadFile); ok {
			return x.ReadFile
		}
	}
	return nil
}

func (x *SyscallRequest) GetWriteFile() *WriteFileCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_WriteFile); ok {
			return x.WriteFile
		}
	}
	return nil
}

func (x *SyscallRequest) GetCreateFile() *CreateFileCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_CreateFile); ok {
			return x.CreateFile
		}
	}
	return nil
}

func (x *SyscallRequest) GetDeleteFile() *DeleteFileCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_DeleteFile); ok {
			return x.DeleteFile
		}
	}
	return nil
}

func (x *SyscallRequest) GetListDirectory() *ListDirectoryCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_ListDirectory); ok {
			return x.ListDirectory
		}
	}
	return nil
}

func (x *SyscallRequest) GetFileExists() *FileExistsCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_FileExists); ok {
			return x.FileExists
		}
	}
	return nil
}

func (x *SyscallRequest) GetFileStat() *FileStatCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_FileStat); ok {
			return x.FileStat
		}
	}
	return nil
}

func (x *SyscallRequest) GetMoveFile() *MoveFileCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_MoveFile); ok {
			return x.MoveFile
		}
	}
	return nil
}

func (x *SyscallRequest) GetCopyFile() *CopyFileCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_CopyFile); ok {
			return x.CopyFile
		}
	}
	return nil
}

func (x *SyscallRequest) GetCreateDirectory() *CreateDirectoryCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_CreateDirectory); ok {
			return x.CreateDirectory
		}
	}
	return nil
}

func (x *SyscallRequest) GetSpawnProcess() *SpawnProcessCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_SpawnProcess); ok {
			return x.SpawnProcess
		}
	}
	return nil
}

func (x *SyscallRequest) GetKillProcess() *KillProcessCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_KillProcess); ok {
			return x.KillProcess
		}
	}
	return nil
}

func (x *SyscallRequest) GetGetSystemInfo() *GetSystemInfoCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_GetSystemInfo); ok {
			return x.GetSystemInfo
		}
	}
	return nil
}

func (x *SyscallRequest) GetGetCurrentTime() *GetCurrentTimeCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_GetCurrentTime); ok {
			return x.GetCurrentTime
		}
	}
	return nil
}

func (x *SyscallRequest) GetGetEnvVar() *GetEnvVarCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_GetEnvVar); ok {
			return x.GetEnvVar
		}
	}
	return nil
}

func (x *SyscallRequest) GetNetworkRequest() *NetworkRequestCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_NetworkRequest); ok {
			return x.NetworkRequest
		}
	}
	return nil
}

func (x *SyscallRequest) GetCreatePipe() *CreatePipeCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_CreatePipe); ok {
			return x.CreatePipe
		}
	}
	return nil
}

func (x *SyscallRequest) GetWritePipe() *WritePipeCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_WritePipe); ok {
			return x.WritePipe
		}
	}
	return nil
}

func (x *SyscallRequest) GetReadPipe() *ReadPipeCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_ReadPipe); ok {
			return x.ReadPipe
		}
	}
	return nil
}

func (x *SyscallRequest) GetClosePipe() *ClosePipeCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_ClosePipe); ok {
			return x.ClosePipe
		}
	}
	return nil
}

func (x *SyscallRequest) GetDestroyPipe() *DestroyPipeCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_DestroyPipe); ok {
			return x.DestroyPipe
		}
	}
	return nil
}

func (x *SyscallRequest) GetPipeStats() *PipeStatsCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_PipeStats); ok {
			return x.PipeStats
		}
	}
	return nil
}

func (x *SyscallRequest) GetCreateShm() *CreateShmCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_CreateShm); ok {
			return x.CreateShm
		}
	}
	return nil
}

func (x *SyscallRequest) GetAttachShm() *AttachShmCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_AttachShm); ok {
			return x.AttachShm
		}
	}
	return nil
}

func (x *SyscallRequest) GetDetachShm() *DetachShmCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_DetachShm); ok {
			return x.DetachShm
		}
	}
	return nil
}

func (x *SyscallRequest) GetWriteShm() *WriteShmCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_WriteShm); ok {
			return x.WriteShm
		}
	}
	return nil
}

func (x *SyscallRequest) GetReadShm() *ReadShmCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_ReadShm); ok {
			return x.ReadShm
		}
	}
	return nil
}

func (x *SyscallRequest) GetDestroyShm() *DestroyShmCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_DestroyShm); ok {
			return x.DestroyShm
		}
	}
	return nil
}

func (x *SyscallRequest) GetShmStats() *ShmStatsCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_ShmStats); ok {
			return x.ShmStats
		}
	}
	return nil
}

func (x *SyscallRequest) GetScheduleNext() *ScheduleNextCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_ScheduleNext); ok {
			return x.ScheduleNext
		}
	}
	return nil
}

func (x *SyscallRequest) GetYieldProcess() *YieldProcessCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_YieldProcess); ok {
			return x.YieldProcess
		}
	}
	return nil
}

func (x *SyscallRequest) GetGetCurrentScheduled() *GetCurrentScheduledCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_GetCurrentScheduled); ok {
			return x.GetCurrentScheduled
		}
	}
	return nil
}

func (x *SyscallRequest) GetGetSchedulerStats() *GetSchedulerStatsCall {
	if x != nil {
		if x, ok := x.Syscall.(*SyscallRequest_GetSchedulerStats); ok {
			return x.GetSchedulerStats
		}
	}
	return nil
}

type isSyscallRequest_Syscall interface {
	isSyscallRequest_Syscall()
}

type SyscallRequest_ReadFile struct {
	ReadFile *ReadFileCall `protobuf:"bytes,10,opt,name=read_file,json=readFile,proto3,oneof"`
}

type SyscallRequest_WriteFile struct {
	WriteFile *WriteFileCall `protobuf:"bytes,11,opt,name=write_file,json=writeFile,proto3,oneof"`
}

type SyscallRequest_CreateFile struct {
	CreateFile *CreateFileCall `protobuf:"bytes,12,opt,name=create_file,json=createFile,proto3,oneof"`
}

type SyscallRequest_DeleteFile struct {
	DeleteFile *DeleteFileCall `protobuf:"bytes,13,opt,name=delete_file,json=deleteFile,proto3,oneof"`
}

type SyscallRequest_ListDirectory struct {
	ListDirectory *ListDirectoryCall `protobuf:"bytes,14,opt,name=list_directory,json=listDirectory,proto3,oneof"`
}

type SyscallRequest_FileExists struct {
	FileExists *FileExistsCall `protobuf:"bytes,15,opt,name=file_exists,json=fileExists,proto3,oneof"`
}

type SyscallRequest_FileStat struct {
	FileStat *FileStatCall `protobuf:"bytes,16,opt,name=file_stat,json=fileStat,proto3,oneof"`
}

type SyscallRequest_MoveFile struct {
	MoveFile *MoveFileCall `protobuf:"bytes,17,opt,name=move_file,json=moveFile,proto3,oneof"`
}

type SyscallRequest_CopyFile struct {
	CopyFile *CopyFileCall `protobuf:"bytes,18,opt,name=copy_file,json=copyFile,proto3,oneof"`
}

type SyscallRequest_CreateDirectory struct {
	CreateDirectory *CreateDirectoryCall `protobuf:"bytes,19,opt,name=create_directory,json=createDirectory,proto3,oneof"`
}

type SyscallRequest_SpawnProcess struct {
	SpawnProcess *SpawnProcessCall `protobuf:"bytes,20,opt,name=spawn_process,json=spawnProcess,proto3,oneof"`
}

type SyscallRequest_KillProcess struct {
	KillProcess *KillProcessCall `protobuf:"bytes,21,opt,name=kill_process,json=killProcess,proto3,oneof"`
}

type SyscallRequest_GetSystemInfo struct {
	GetSystemInfo *GetSystemInfoCall `protobuf:"bytes,30,opt,name=get_system_info,json=getSystemInfo,proto3,oneof"`
}

type SyscallRequest_GetCurrentTime struct {
	GetCurrentTime *GetCurrentTimeCall `protobuf:"bytes,31,opt,name=get_current_time,json=getCurrentTime,proto3,oneof"`
}

type SyscallRequest_GetEnvVar struct {
	GetEnvVar *GetEnvVarCall `protobuf:"bytes,32,opt,name=get_env_var,json=getEnvVar,proto3,oneof"`
}

type SyscallRequest_NetworkRequest struct {
	NetworkRequest *NetworkRequestCall `protobuf:"bytes,40,opt,name=network_request,json=networkRequest,proto3,oneof"`
}

type SyscallRequest_CreatePipe struct {
	// IPC - Pipes
	CreatePipe *CreatePipeCall `protobuf:"bytes,50,opt,name=create_pipe,json=createPipe,proto3,oneof"`
}

type SyscallRequest_WritePipe struct {
	WritePipe *WritePipeCall `protobuf:"bytes,51,opt,name=write_pipe,json=writePipe,proto3,oneof"`
}

type SyscallRequest_ReadPipe struct {
	ReadPipe *ReadPipeCall `protobuf:"bytes,52,opt,name=read_pipe,json=readPipe,proto3,oneof"`
}

type SyscallRequest_ClosePipe struct {
	ClosePipe *ClosePipeCall `protobuf:"bytes,53,opt,name=close_pipe,json=closePipe,proto3,oneof"`
}

type SyscallRequest_DestroyPipe struct {
	DestroyPipe *DestroyPipeCall `protobuf:"bytes,54,opt,name=destroy_pipe,json=destroyPipe,proto3,oneof"`
}

type SyscallRequest_PipeStats struct {
	PipeStats *PipeStatsCall `protobuf:"bytes,55,opt,name=pipe_stats,json=pipeStats,proto3,oneof"`
}

type SyscallRequest_CreateShm struct {
	// IPC - Shared Memory
	CreateShm *CreateShmCall `protobuf:"bytes,60,opt,name=create_shm,json=createShm,proto3,oneof"`
}

type SyscallRequest_AttachShm struct {
	AttachShm *AttachShmCall `protobuf:"bytes,61,opt,name=attach_shm,json=attachShm,proto3,oneof"`
}

type SyscallRequest_DetachShm struct {
	DetachShm *DetachShmCall `protobuf:"bytes,62,opt,name=detach_shm,json=detachShm,proto3,oneof"`
}

type SyscallRequest_WriteShm struct {
	WriteShm *WriteShmCall `protobuf:"bytes,63,opt,name=write_shm,json=writeShm,proto3,oneof"`
}

type SyscallRequest_ReadShm struct {
	ReadShm *ReadShmCall `protobuf:"bytes,64,opt,name=read_shm,json=readShm,proto3,oneof"`
}

type SyscallRequest_DestroyShm struct {
	DestroyShm *DestroyShmCall `protobuf:"bytes,65,opt,name=destroy_shm,json=destroyShm,proto3,oneof"`
}

type SyscallRequest_ShmStats struct {
	ShmStats *ShmStatsCall `protobuf:"bytes,66,opt,name=shm_stats,json=shmStats,proto3,oneof"`
}

type SyscallRequest_ScheduleNext struct {
	// Scheduler
	ScheduleNext *ScheduleNextCall `protobuf:"bytes,70,opt,name=schedule_next,json=scheduleNext,proto3,oneof"`
}

type SyscallRequest_YieldProcess struct {
	YieldProcess *YieldProcessCall `protobuf:"bytes,71,opt,name=yield_process,json=yieldProcess,proto3,oneof"`
}

type SyscallRequest_GetCurrentScheduled struct {
	GetCurrentScheduled *GetCurrentScheduledCall `protobuf:"bytes,72,opt,name=get_current_scheduled,json=getCurrentScheduled,proto3,oneof"`
}

type SyscallRequest_GetSchedulerStats struct {
	GetSchedulerStats *GetSchedulerStatsCall `protobuf:"bytes,73,opt,name=get_scheduler_stats,json=getSchedulerStats,proto3,oneof"`
}

func (*SyscallRequest_ReadFile) isSyscallRequest_Syscall() {}

func (*SyscallRequest_WriteFile) isSyscallRequest_Syscall() {}

func (*SyscallRequest_CreateFile) isSyscallRequest_Syscall() {}

func (*SyscallRequest_DeleteFile) isSyscallRequest_Syscall() {}

func (*SyscallRequest_ListDirectory) isSyscallRequest_Syscall() {}

func (*SyscallRequest_FileExists) isSyscallRequest_Syscall() {}

func (*SyscallRequest_FileStat) isSyscallRequest_Syscall() {}

func (*SyscallRequest_MoveFile) isSyscallRequest_Syscall() {}

func (*SyscallRequest_CopyFile) isSyscallRequest_Syscall() {}

func (*SyscallRequest_CreateDirectory) isSyscallRequest_Syscall() {}

func (*SyscallRequest_SpawnProcess) isSyscallRequest_Syscall() {}

func (*SyscallRequest_KillProcess) isSyscallRequest_Syscall() {}

func (*SyscallRequest_GetSystemInfo) isSyscallRequest_Syscall() {}

func (*SyscallRequest_GetCurrentTime) isSyscallRequest_Syscall() {}

func (*SyscallRequest_GetEnvVar) isSyscallRequest_Syscall() {}

func (*SyscallRequest_NetworkRequest) isSyscallRequest_Syscall() {}

func (*SyscallRequest_CreatePipe) isSyscallRequest_Syscall() {}

func (*SyscallRequest_WritePipe) isSyscallRequest_Syscall() {}

func (*SyscallRequest_ReadPipe) isSyscallRequest_Syscall() {}

func (*SyscallRequest_ClosePipe) isSyscallRequest_Syscall() {}

func (*SyscallRequest_DestroyPipe) isSyscallRequest_Syscall() {}

func (*SyscallRequest_PipeStats) isSyscallRequest_Syscall() {}

func (*SyscallRequest_CreateShm) isSyscallRequest_Syscall() {}

func (*SyscallRequest_AttachShm) isSyscallRequest_Syscall() {}

func (*SyscallRequest_DetachShm) isSyscallRequest_Syscall() {}

func (*SyscallRequest_WriteShm) isSyscallRequest_Syscall() {}

func (*SyscallRequest_ReadShm) isSyscallRequest_Syscall() {}

func (*SyscallRequest_DestroyShm) isSyscallRequest_Syscall() {}

func (*SyscallRequest_ShmStats) isSyscallRequest_Syscall() {}

func (*SyscallRequest_ScheduleNext) isSyscallRequest_Syscall() {}

func (*SyscallRequest_YieldProcess) isSyscallRequest_Syscall() {}

func (*SyscallRequest_GetCurrentScheduled) isSyscallRequest_Syscall() {}

func (*SyscallRequest_GetSchedulerStats) isSyscallRequest_Syscall() {}

type SyscallResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Result:
	//
	//	*SyscallResponse_Success
	//	*SyscallResponse_Error
	//	*SyscallResponse_PermissionDenied
	Result        isSyscallResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyscallResponse) Reset() {
	*x = SyscallResponse{}
	mi := &file_kernel_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyscallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyscallResponse) ProtoMessage() {}

func (x *SyscallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyscallResponse.ProtoReflect.Descriptor instead.
func (*SyscallResponse) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{1}
}

func (x *SyscallResponse) GetResult() isSyscallResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SyscallResponse) GetSuccess() *SuccessResult {
	if x != nil {
		if x, ok := x.Result.(*SyscallResponse_Success); ok {
			return x.Success
		}
	}
	return nil
}

func (x *SyscallResponse) GetError() *ErrorResult {
	if x != nil {
		if x, ok := x.Result.(*SyscallResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *SyscallResponse) GetPermissionDenied() *PermissionDeniedResult {
	if x != nil {
		if x, ok := x.Result.(*SyscallResponse_PermissionDenied); ok {
			return x.PermissionDenied
		}
	}
	return nil
}

type isSyscallResponse_Result interface {
	isSyscallResponse_Result()
}

type SyscallResponse_Success struct {
	Success *SuccessResult `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type SyscallResponse_Error struct {
	Error *ErrorResult `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

type SyscallResponse_PermissionDenied struct {
	PermissionDenied *PermissionDeniedResult `protobuf:"bytes,3,opt,name=permission_denied,json=permissionDenied,proto3,oneof"`
}

func (*SyscallResponse_Success) isSyscallResponse_Result() {}

func (*SyscallResponse_Error) isSyscallResponse_Result() {}

func (*SyscallResponse_PermissionDenied) isSyscallResponse_Result() {}

type SuccessResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SuccessResult) Reset() {
	*x = SuccessResult{}
	mi := &file_kernel_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuccessResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessResult) ProtoMessage() {}

func (x *SuccessResult) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessResult.ProtoReflect.Descriptor instead.
func (*SuccessResult) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{2}
}

func (x *SuccessResult) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ErrorResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorResult) Reset() {
	*x = ErrorResult{}
	mi := &file_kernel_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResult) ProtoMessage() {}

func (x *ErrorResult) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResult.ProtoReflect.Descriptor instead.
func (*ErrorResult) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{3}
}

func (x *ErrorResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PermissionDeniedResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermissionDeniedResult) Reset() {
	*x = PermissionDeniedResult{}
	mi := &file_kernel_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionDeniedResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionDeniedResult) ProtoMessage() {}

func (x *PermissionDeniedResult) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionDeniedResult.ProtoReflect.Descriptor instead.
func (*PermissionDeniedResult) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{4}
}

func (x *PermissionDeniedResult) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ReadFileCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadFileCall) Reset() {
	*x = ReadFileCall{}
	mi := &file_kernel_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadFileCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFileCall) ProtoMessage() {}

func (x *ReadFileCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFileCall.ProtoReflect.Descriptor instead.
func (*ReadFileCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{5}
}

func (x *ReadFileCall) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type WriteFileCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteFileCall) Reset() {
	*x = WriteFileCall{}
	mi := &file_kernel_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteFileCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFileCall) ProtoMessage() {}

func (x *WriteFileCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFileCall.ProtoReflect.Descriptor instead.
func (*WriteFileCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{6}
}

func (x *WriteFileCall) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WriteFileCall) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateFileCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFileCall) Reset() {
	*x = CreateFileCall{}
	mi := &file_kernel_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFileCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileCall) ProtoMessage() {}

func (x *CreateFileCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileCall.ProtoReflect.Descriptor instead.
func (*CreateFileCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{7}
}

func (x *CreateFileCall) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type DeleteFileCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileCall) Reset() {
	*x = DeleteFileCall{}
	mi := &file_kernel_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileCall) ProtoMessage() {}

func (x *DeleteFileCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileCall.ProtoReflect.Descriptor instead.
func (*DeleteFileCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteFileCall) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ListDirectoryCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDirectoryCall) Reset() {
	*x = ListDirectoryCall{}
	mi := &file_kernel_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirectoryCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryCall) ProtoMessage() {}

func (x *ListDirectoryCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryCall.ProtoReflect.Descriptor instead.
func (*ListDirectoryCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{9}
}

func (x *ListDirectoryCall) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type FileExistsCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileExistsCall) Reset() {
	*x = FileExistsCall{}
	mi := &file_kernel_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileExistsCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileExistsCall) ProtoMessage() {}

func (x *FileExistsCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileExistsCall.ProtoReflect.Descriptor instead.
func (*FileExistsCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{10}
}

func (x *FileExistsCall) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type FileStatCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileStatCall) Reset() {
	*x = FileStatCall{}
	mi := &file_kernel_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileStatCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileStatCall) ProtoMessage() {}

func (x *FileStatCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileStatCall.ProtoReflect.Descriptor instead.
func (*FileStatCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{11}
}

func (x *FileStatCall) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type MoveFileCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Source        string                 `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Destination   string                 `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveFileCall) Reset() {
	*x = MoveFileCall{}
	mi := &file_kernel_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveFileCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveFileCall) ProtoMessage() {}

func (x *MoveFileCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveFileCall.ProtoReflect.Descriptor instead.
func (*MoveFileCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{12}
}

func (x *MoveFileCall) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *MoveFileCall) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

type CopyFileCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Source        string                 `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Destination   string                 `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopyFileCall) Reset() {
	*x = CopyFileCall{}
	mi := &file_kernel_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyFileCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyFileCall) ProtoMessage() {}

func (x *CopyFileCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyFileCall.ProtoReflect.Descriptor instead.
func (*CopyFileCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{13}
}

func (x *CopyFileCall) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *CopyFileCall) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

type CreateDirectoryCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDirectoryCall) Reset() {
	*x = CreateDirectoryCall{}
	mi := &file_kernel_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDirectoryCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDirectoryCall) ProtoMessage() {}

func (x *CreateDirectoryCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDirectoryCall.ProtoReflect.Descriptor instead.
func (*CreateDirectoryCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{14}
}

func (x *CreateDirectoryCall) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type SpawnProcessCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       string                 `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Args          []string               `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpawnProcessCall) Reset() {
	*x = SpawnProcessCall{}
	mi := &file_kernel_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpawnProcessCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpawnProcessCall) ProtoMessage() {}

func (x *SpawnProcessCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpawnProcessCall.ProtoReflect.Descriptor instead.
func (*SpawnProcessCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{15}
}

func (x *SpawnProcessCall) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *SpawnProcessCall) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

type KillProcessCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TargetPid     uint32                 `protobuf:"varint,1,opt,name=target_pid,json=targetPid,proto3" json:"target_pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KillProcessCall) Reset() {
	*x = KillProcessCall{}
	mi := &file_kernel_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KillProcessCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillProcessCall) ProtoMessage() {}

func (x *KillProcessCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillProcessCall.ProtoReflect.Descriptor instead.
func (*KillProcessCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{16}
}

func (x *KillProcessCall) GetTargetPid() uint32 {
	if x != nil {
		return x.TargetPid
	}
	return 0
}

type GetSystemInfoCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSystemInfoCall) Reset() {
	*x = GetSystemInfoCall{}
	mi := &file_kernel_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSystemInfoCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemInfoCall) ProtoMessage() {}

func (x *GetSystemInfoCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemInfoCall.ProtoReflect.Descriptor instead.
func (*GetSystemInfoCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{17}
}

type GetCurrentTimeCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrentTimeCall) Reset() {
	*x = GetCurrentTimeCall{}
	mi := &file_kernel_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentTimeCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentTimeCall) ProtoMessage() {}

func (x *GetCurrentTimeCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentTimeCall.ProtoReflect.Descriptor instead.
func (*GetCurrentTimeCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{18}
}

type GetEnvVarCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEnvVarCall) Reset() {
	*x = GetEnvVarCall{}
	mi := &file_kernel_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEnvVarCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvVarCall) ProtoMessage() {}

func (x *GetEnvVarCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvVarCall.ProtoReflect.Descriptor instead.
func (*GetEnvVarCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{19}
}

func (x *GetEnvVarCall) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type NetworkRequestCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkRequestCall) Reset() {
	*x = NetworkRequestCall{}
	mi := &file_kernel_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkRequestCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkRequestCall) ProtoMessage() {}

func (x *NetworkRequestCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkRequestCall.ProtoReflect.Descriptor instead.
func (*NetworkRequestCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{20}
}

func (x *NetworkRequestCall) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type CreatePipeCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReaderPid     uint32                 `protobuf:"varint,1,opt,name=reader_pid,json=readerPid,proto3" json:"reader_pid,omitempty"`
	WriterPid     uint32                 `protobuf:"varint,2,opt,name=writer_pid,json=writerPid,proto3" json:"writer_pid,omitempty"`
	Capacity      *uint32                `protobuf:"varint,3,opt,name=capacity,proto3,oneof" json:"capacity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePipeCall) Reset() {
	*x = CreatePipeCall{}
	mi := &file_kernel_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePipeCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePipeCall) ProtoMessage() {}

func (x *CreatePipeCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePipeCall.ProtoReflect.Descriptor instead.
func (*CreatePipeCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{21}
}

func (x *CreatePipeCall) GetReaderPid() uint32 {
	if x != nil {
		return x.ReaderPid
	}
	return 0
}

func (x *CreatePipeCall) GetWriterPid() uint32 {
	if x != nil {
		return x.WriterPid
	}
	return 0
}

func (x *CreatePipeCall) GetCapacity() uint32 {
	if x != nil && x.Capacity != nil {
		return *x.Capacity
	}
	return 0
}

type WritePipeCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PipeId        uint32                 `protobuf:"varint,1,opt,name=pipe_id,json=pipeId,proto3" json:"pipe_id,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WritePipeCall) Reset() {
	*x = WritePipeCall{}
	mi := &file_kernel_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WritePipeCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WritePipeCall) ProtoMessage() {}

func (x *WritePipeCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WritePipeCall.ProtoReflect.Descriptor instead.
func (*WritePipeCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{22}
}

func (x *WritePipeCall) GetPipeId() uint32 {
	if x != nil {
		return x.PipeId
	}
	return 0
}

func (x *WritePipeCall) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReadPipeCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PipeId        uint32                 `protobuf:"varint,1,opt,name=pipe_id,json=pipeId,proto3" json:"pipe_id,omitempty"`
	Size          uint32                 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadPipeCall) Reset() {
	*x = ReadPipeCall{}
	mi := &file_kernel_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadPipeCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadPipeCall) ProtoMessage() {}

func (x *ReadPipeCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadPipeCall.ProtoReflect.Descriptor instead.
func (*ReadPipeCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{23}
}

func (x *ReadPipeCall) GetPipeId() uint32 {
	if x != nil {
		return x.PipeId
	}
	return 0
}

func (x *ReadPipeCall) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ClosePipeCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PipeId        uint32                 `protobuf:"varint,1,opt,name=pipe_id,json=pipeId,proto3" json:"pipe_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClosePipeCall) Reset() {
	*x = ClosePipeCall{}
	mi := &file_kernel_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClosePipeCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosePipeCall) ProtoMessage() {}

func (x *ClosePipeCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosePipeCall.ProtoReflect.Descriptor instead.
func (*ClosePipeCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{24}
}

func (x *ClosePipeCall) GetPipeId() uint32 {
	if x != nil {
		return x.PipeId
	}
	return 0
}

type DestroyPipeCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PipeId        uint32                 `protobuf:"varint,1,opt,name=pipe_id,json=pipeId,proto3" json:"pipe_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestroyPipeCall) Reset() {
	*x = DestroyPipeCall{}
	mi := &file_kernel_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroyPipeCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyPipeCall) ProtoMessage() {}

func (x *DestroyPipeCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyPipeCall.ProtoReflect.Descriptor instead.
func (*DestroyPipeCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{25}
}

func (x *DestroyPipeCall) GetPipeId() uint32 {
	if x != nil {
		return x.PipeId
	}
	return 0
}

type PipeStatsCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PipeId        uint32                 `protobuf:"varint,1,opt,name=pipe_id,json=pipeId,proto3" json:"pipe_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PipeStatsCall) Reset() {
	*x = PipeStatsCall{}
	mi := &file_kernel_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PipeStatsCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipeStatsCall) ProtoMessage() {}

func (x *PipeStatsCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipeStatsCall.ProtoReflect.Descriptor instead.
func (*PipeStatsCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{26}
}

func (x *PipeStatsCall) GetPipeId() uint32 {
	if x != nil {
		return x.PipeId
	}
	return 0
}

type CreateShmCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Size          uint32                 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateShmCall) Reset() {
	*x = CreateShmCall{}
	mi := &file_kernel_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateShmCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShmCall) ProtoMessage() {}

func (x *CreateShmCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShmCall.ProtoReflect.Descriptor instead.
func (*CreateShmCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{27}
}

func (x *CreateShmCall) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type AttachShmCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SegmentId     uint32                 `protobuf:"varint,1,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	ReadOnly      bool                   `protobuf:"varint,2,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachShmCall) Reset() {
	*x = AttachShmCall{}
	mi := &file_kernel_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachShmCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachShmCall) ProtoMessage() {}

func (x *AttachShmCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachShmCall.ProtoReflect.Descriptor instead.
func (*AttachShmCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{28}
}

func (x *AttachShmCall) GetSegmentId() uint32 {
	if x != nil {
		return x.SegmentId
	}
	return 0
}

func (x *AttachShmCall) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

type DetachShmCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SegmentId     uint32                 `protobuf:"varint,1,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetachShmCall) Reset() {
	*x = DetachShmCall{}
	mi := &file_kernel_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetachShmCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachShmCall) ProtoMessage() {}

func (x *DetachShmCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachShmCall.ProtoReflect.Descriptor instead.
func (*DetachShmCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{29}
}

func (x *DetachShmCall) GetSegmentId() uint32 {
	if x != nil {
		return x.SegmentId
	}
	return 0
}

type WriteShmCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SegmentId     uint32                 `protobuf:"varint,1,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	Offset        uint32                 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteShmCall) Reset() {
	*x = WriteShmCall{}
	mi := &file_kernel_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteShmCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteShmCall) ProtoMessage() {}

func (x *WriteShmCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteShmCall.ProtoReflect.Descriptor instead.
func (*WriteShmCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{30}
}

func (x *WriteShmCall) GetSegmentId() uint32 {
	if x != nil {
		return x.SegmentId
	}
	return 0
}

func (x *WriteShmCall) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *WriteShmCall) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReadShmCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SegmentId     uint32                 `protobuf:"varint,1,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	Offset        uint32                 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Size          uint32                 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadShmCall) Reset() {
	*x = ReadShmCall{}
	mi := &file_kernel_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadShmCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadShmCall) ProtoMessage() {}

func (x *ReadShmCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadShmCall.ProtoReflect.Descriptor instead.
func (*ReadShmCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{31}
}

func (x *ReadShmCall) GetSegmentId() uint32 {
	if x != nil {
		return x.SegmentId
	}
	return 0
}

func (x *ReadShmCall) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReadShmCall) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type DestroyShmCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SegmentId     uint32                 `protobuf:"varint,1,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestroyShmCall) Reset() {
	*x = DestroyShmCall{}
	mi := &file_kernel_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroyShmCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyShmCall) ProtoMessage() {}

func (x *DestroyShmCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyShmCall.ProtoReflect.Descriptor instead.
func (*DestroyShmCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{32}
}

func (x *DestroyShmCall) GetSegmentId() uint32 {
	if x != nil {
		return x.SegmentId
	}
	return 0
}

type ShmStatsCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SegmentId     uint32                 `protobuf:"varint,1,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShmStatsCall) Reset() {
	*x = ShmStatsCall{}
	mi := &file_kernel_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShmStatsCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShmStatsCall) ProtoMessage() {}

func (x *ShmStatsCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShmStatsCall.ProtoReflect.Descriptor instead.
func (*ShmStatsCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{33}
}

func (x *ShmStatsCall) GetSegmentId() uint32 {
	if x != nil {
		return x.SegmentId
	}
	return 0
}

type ScheduleNextCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleNextCall) Reset() {
	*x = ScheduleNextCall{}
	mi := &file_kernel_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleNextCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleNextCall) ProtoMessage() {}

func (x *ScheduleNextCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleNextCall.ProtoReflect.Descriptor instead.
func (*ScheduleNextCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{34}
}

type YieldProcessCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *YieldProcessCall) Reset() {
	*x = YieldProcessCall{}
	mi := &file_kernel_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YieldProcessCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YieldProcessCall) ProtoMessage() {}

func (x *YieldProcessCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YieldProcessCall.ProtoReflect.Descriptor instead.
func (*YieldProcessCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{35}
}

type GetCurrentScheduledCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrentScheduledCall) Reset() {
	*x = GetCurrentScheduledCall{}
	mi := &file_kernel_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentScheduledCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentScheduledCall) ProtoMessage() {}

func (x *GetCurrentScheduledCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentScheduledCall.ProtoReflect.Descriptor instead.
func (*GetCurrentScheduledCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{36}
}

type GetSchedulerStatsCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSchedulerStatsCall) Reset() {
	*x = GetSchedulerStatsCall{}
	mi := &file_kernel_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchedulerStatsCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchedulerStatsCall) ProtoMessage() {}

func (x *GetSchedulerStatsCall) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchedulerStatsCall.ProtoReflect.Descriptor instead.
func (*GetSchedulerStatsCall) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{37}
}

type CreateProcessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Priority      uint32                 `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	SandboxLevel  SandboxLevel           `protobuf:"varint,3,opt,name=sandbox_level,json=sandboxLevel,proto3,enum=kernel.SandboxLevel" json:"sandbox_level,omitempty"`
	Command       *string                `protobuf:"bytes,4,opt,name=command,proto3,oneof" json:"command,omitempty"`
	Args          []string               `protobuf:"bytes,5,rep,name=args,proto3" json:"args,omitempty"`
	EnvVars       []string               `protobuf:"bytes,6,rep,name=env_vars,json=envVars,proto3" json:"env_vars,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProcessRequest) Reset() {
	*x = CreateProcessRequest{}
	mi := &file_kernel_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProcessRequest) ProtoMessage() {}

func (x *CreateProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProcessRequest.ProtoReflect.Descriptor instead.
func (*CreateProcessRequest) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{38}
}

func (x *CreateProcessRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProcessRequest) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *CreateProcessRequest) GetSandboxLevel() SandboxLevel {
	if x != nil {
		return x.SandboxLevel
	}
	return SandboxLevel_MINIMAL
}

func (x *CreateProcessRequest) GetCommand() string {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return ""
}

func (x *CreateProcessRequest) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *CreateProcessRequest) GetEnvVars() []string {
	if x != nil {
		return x.EnvVars
	}
	return nil
}

type CreateProcessResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           uint32                 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	OsPid         *uint32                `protobuf:"varint,4,opt,name=os_pid,json=osPid,proto3,oneof" json:"os_pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProcessResponse) Reset() {
	*x = CreateProcessResponse{}
	mi := &file_kernel_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProcessResponse) ProtoMessage() {}

func (x *CreateProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProcessResponse.ProtoReflect.Descriptor instead.
func (*CreateProcessResponse) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{39}
}

func (x *CreateProcessResponse) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *CreateProcessResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateProcessResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CreateProcessResponse) GetOsPid() uint32 {
	if x != nil && x.OsPid != nil {
		return *x.OsPid
	}
	return 0
}

type UpdateSandboxRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           uint32                 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Capabilities  []Capability           `protobuf:"varint,2,rep,packed,name=capabilities,proto3,enum=kernel.Capability" json:"capabilities,omitempty"`
	AllowedPaths  []string               `protobuf:"bytes,3,rep,name=allowed_paths,json=allowedPaths,proto3" json:"allowed_paths,omitempty"`
	BlockedPaths  []string               `protobuf:"bytes,4,rep,name=blocked_paths,json=blockedPaths,proto3" json:"blocked_paths,omitempty"`
	Limits        *ResourceLimits        `protobuf:"bytes,5,opt,name=limits,proto3" json:"limits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSandboxRequest) Reset() {
	*x = UpdateSandboxRequest{}
	mi := &file_kernel_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSandboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSandboxRequest) ProtoMessage() {}

func (x *UpdateSandboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSandboxRequest.ProtoReflect.Descriptor instead.
func (*UpdateSandboxRequest) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateSandboxRequest) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *UpdateSandboxRequest) GetCapabilities() []Capability {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *UpdateSandboxRequest) GetAllowedPaths() []string {
	if x != nil {
		return x.AllowedPaths
	}
	return nil
}

func (x *UpdateSandboxRequest) GetBlockedPaths() []string {
	if x != nil {
		return x.BlockedPaths
	}
	return nil
}

func (x *UpdateSandboxRequest) GetLimits() *ResourceLimits {
	if x != nil {
		return x.Limits
	}
	return nil
}

type UpdateSandboxResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSandboxResponse) Reset() {
	*x = UpdateSandboxResponse{}
	mi := &file_kernel_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSandboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSandboxResponse) ProtoMessage() {}

func (x *UpdateSandboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSandboxResponse.ProtoReflect.Descriptor instead.
func (*UpdateSandboxResponse) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateSandboxResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateSandboxResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ResourceLimits struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	MaxMemoryBytes        uint64                 `protobuf:"varint,1,opt,name=max_memory_bytes,json=maxMemoryBytes,proto3" json:"max_memory_bytes,omitempty"`
	MaxCpuTimeMs          uint64                 `protobuf:"varint,2,opt,name=max_cpu_time_ms,json=maxCpuTimeMs,proto3" json:"max_cpu_time_ms,omitempty"`
	MaxFileDescriptors    uint32                 `protobuf:"varint,3,opt,name=max_file_descriptors,json=maxFileDescriptors,proto3" json:"max_file_descriptors,omitempty"`
	MaxProcesses          uint32                 `protobuf:"varint,4,opt,name=max_processes,json=maxProcesses,proto3" json:"max_processes,omitempty"`
	MaxNetworkConnections uint32                 `protobuf:"varint,5,opt,name=max_network_connections,json=maxNetworkConnections,proto3" json:"max_network_connections,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ResourceLimits) Reset() {
	*x = ResourceLimits{}
	mi := &file_kernel_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceLimits) ProtoMessage() {}

func (x *ResourceLimits) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceLimits.ProtoReflect.Descriptor instead.
func (*ResourceLimits) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{42}
}

func (x *ResourceLimits) GetMaxMemoryBytes() uint64 {
	if x != nil {
		return x.MaxMemoryBytes
	}
	return 0
}

func (x *ResourceLimits) GetMaxCpuTimeMs() uint64 {
	if x != nil {
		return x.MaxCpuTimeMs
	}
	return 0
}

func (x *ResourceLimits) GetMaxFileDescriptors() uint32 {
	if x != nil {
		return x.MaxFileDescriptors
	}
	return 0
}

func (x *ResourceLimits) GetMaxProcesses() uint32 {
	if x != nil {
		return x.MaxProcesses
	}
	return 0
}

func (x *ResourceLimits) GetMaxNetworkConnections() uint32 {
	if x != nil {
		return x.MaxNetworkConnections
	}
	return 0
}

type EventStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventTypes    []string               `protobuf:"bytes,1,rep,name=event_types,json=eventTypes,proto3" json:"event_types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventStreamRequest) Reset() {
	*x = EventStreamRequest{}
	mi := &file_kernel_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStreamRequest) ProtoMessage() {}

func (x *EventStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStreamRequest.ProtoReflect.Descriptor instead.
func (*EventStreamRequest) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{43}
}

func (x *EventStreamRequest) GetEventTypes() []string {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

type KernelEvent struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Timestamp uint64                 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to Event:
	//
	//	*KernelEvent_ProcessCreated
	//	*KernelEvent_ProcessTerminated
	//	*KernelEvent_SyscallExecuted
	//	*KernelEvent_PermissionDenied
	Event         isKernelEvent_Event `protobuf_oneof:"event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KernelEvent) Reset() {
	*x = KernelEvent{}
	mi := &file_kernel_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KernelEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KernelEvent) ProtoMessage() {}

func (x *KernelEvent) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KernelEvent.ProtoReflect.Descriptor instead.
func (*KernelEvent) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{44}
}

func (x *KernelEvent) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *KernelEvent) GetEvent() isKernelEvent_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *KernelEvent) GetProcessCreated() *ProcessCreatedEvent {
	if x != nil {
		if x, ok := x.Event.(*KernelEvent_ProcessCreated); ok {
			return x.ProcessCreated
		}
	}
	return nil
}

func (x *KernelEvent) GetProcessTerminated() *ProcessTerminatedEvent {
	if x != nil {
		if x, ok := x.Event.(*KernelEvent_ProcessTerminated); ok {
			return x.ProcessTerminated
		}
	}
	return nil
}

func (x *KernelEvent) GetSyscallExecuted() *SyscallExecutedEvent {
	if x != nil {
		if x, ok := x.Event.(*KernelEvent_SyscallExecuted); ok {
			return x.SyscallExecuted
		}
	}
	return nil
}

func (x *KernelEvent) GetPermissionDenied() *PermissionDeniedEvent {
	if x != nil {
		if x, ok := x.Event.(*KernelEvent_PermissionDenied); ok {
			return x.PermissionDenied
		}
	}
	return nil
}

type isKernelEvent_Event interface {
	isKernelEvent_Event()
}

type KernelEvent_ProcessCreated struct {
	ProcessCreated *ProcessCreatedEvent `protobuf:"bytes,10,opt,name=process_created,json=processCreated,proto3,oneof"`
}

type KernelEvent_ProcessTerminated struct {
	ProcessTerminated *ProcessTerminatedEvent `protobuf:"bytes,11,opt,name=process_terminated,json=processTerminated,proto3,oneof"`
}

type KernelEvent_SyscallExecuted struct {
	SyscallExecuted *SyscallExecutedEvent `protobuf:"bytes,12,opt,name=syscall_executed,json=syscallExecuted,proto3,oneof"`
}

type KernelEvent_PermissionDenied struct {
	PermissionDenied *PermissionDeniedEvent `protobuf:"bytes,13,opt,name=permission_denied,json=permissionDenied,proto3,oneof"`
}

func (*KernelEvent_ProcessCreated) isKernelEvent_Event() {}

func (*KernelEvent_ProcessTerminated) isKernelEvent_Event() {}

func (*KernelEvent_SyscallExecuted) isKernelEvent_Event() {}

func (*KernelEvent_PermissionDenied) isKernelEvent_Event() {}

type ProcessCreatedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           uint32                 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessCreatedEvent) Reset() {
	*x = ProcessCreatedEvent{}
	mi := &file_kernel_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessCreatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessCreatedEvent) ProtoMessage() {}

func (x *ProcessCreatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessCreatedEvent.ProtoReflect.Descriptor instead.
func (*ProcessCreatedEvent) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{45}
}

func (x *ProcessCreatedEvent) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ProcessCreatedEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ProcessTerminatedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           uint32                 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	ExitCode      int32                  `protobuf:"varint,2,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessTerminatedEvent) Reset() {
	*x = ProcessTerminatedEvent{}
	mi := &file_kernel_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessTerminatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessTerminatedEvent) ProtoMessage() {}

func (x *ProcessTerminatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessTerminatedEvent.ProtoReflect.Descriptor instead.
func (*ProcessTerminatedEvent) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{46}
}

func (x *ProcessTerminatedEvent) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ProcessTerminatedEvent) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

type SyscallExecutedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           uint32                 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	SyscallType   string                 `protobuf:"bytes,2,opt,name=syscall_type,json=syscallType,proto3" json:"syscall_type,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyscallExecutedEvent) Reset() {
	*x = SyscallExecutedEvent{}
	mi := &file_kernel_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyscallExecutedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyscallExecutedEvent) ProtoMessage() {}

func (x *SyscallExecutedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyscallExecutedEvent.ProtoReflect.Descriptor instead.
func (*SyscallExecutedEvent) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{47}
}

func (x *SyscallExecutedEvent) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *SyscallExecutedEvent) GetSyscallType() string {
	if x != nil {
		return x.SyscallType
	}
	return ""
}

func (x *SyscallExecutedEvent) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type PermissionDeniedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           uint32                 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	SyscallType   string                 `protobuf:"bytes,2,opt,name=syscall_type,json=syscallType,proto3" json:"syscall_type,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermissionDeniedEvent) Reset() {
	*x = PermissionDeniedEvent{}
	mi := &file_kernel_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionDeniedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionDeniedEvent) ProtoMessage() {}

func (x *PermissionDeniedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionDeniedEvent.ProtoReflect.Descriptor instead.
func (*PermissionDeniedEvent) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{48}
}

func (x *PermissionDeniedEvent) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *PermissionDeniedEvent) GetSyscallType() string {
	if x != nil {
		return x.SyscallType
	}
	return ""
}

func (x *PermissionDeniedEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ScheduleNextRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleNextRequest) Reset() {
	*x = ScheduleNextRequest{}
	mi := &file_kernel_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleNextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleNextRequest) ProtoMessage() {}

func (x *ScheduleNextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleNextRequest.ProtoReflect.Descriptor instead.
func (*ScheduleNextRequest) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{49}
}

type ScheduleNextResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	NextPid       *uint32                `protobuf:"varint,2,opt,name=next_pid,json=nextPid,proto3,oneof" json:"next_pid,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleNextResponse) Reset() {
	*x = ScheduleNextResponse{}
	mi := &file_kernel_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleNextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleNextResponse) ProtoMessage() {}

func (x *ScheduleNextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleNextResponse.ProtoReflect.Descriptor instead.
func (*ScheduleNextResponse) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{50}
}

func (x *ScheduleNextResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ScheduleNextResponse) GetNextPid() uint32 {
	if x != nil && x.NextPid != nil {
		return *x.NextPid
	}
	return 0
}

func (x *ScheduleNextResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetSchedulerStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSchedulerStatsRequest) Reset() {
	*x = GetSchedulerStatsRequest{}
	mi := &file_kernel_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchedulerStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchedulerStatsRequest) ProtoMessage() {}

func (x *GetSchedulerStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchedulerStatsRequest.ProtoReflect.Descriptor instead.
func (*GetSchedulerStatsRequest) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{51}
}

type GetSchedulerStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Stats         *SchedulerStats        `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSchedulerStatsResponse) Reset() {
	*x = GetSchedulerStatsResponse{}
	mi := &file_kernel_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchedulerStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchedulerStatsResponse) ProtoMessage() {}

func (x *GetSchedulerStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchedulerStatsResponse.ProtoReflect.Descriptor instead.
func (*GetSchedulerStatsResponse) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{52}
}

func (x *GetSchedulerStatsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetSchedulerStatsResponse) GetStats() *SchedulerStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *GetSchedulerStatsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SchedulerStats struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TotalScheduled  uint64                 `protobuf:"varint,1,opt,name=total_scheduled,json=totalScheduled,proto3" json:"total_scheduled,omitempty"`
	ContextSwitches uint64                 `protobuf:"varint,2,opt,name=context_switches,json=contextSwitches,proto3" json:"context_switches,omitempty"`
	Preemptions     uint64                 `protobuf:"varint,3,opt,name=preemptions,proto3" json:"preemptions,omitempty"`
	ActiveProcesses uint32                 `protobuf:"varint,4,opt,name=active_processes,json=activeProcesses,proto3" json:"active_processes,omitempty"`
	Policy          string                 `protobuf:"bytes,5,opt,name=policy,proto3" json:"policy,omitempty"`
	QuantumMicros   uint64                 `protobuf:"varint,6,opt,name=quantum_micros,json=quantumMicros,proto3" json:"quantum_micros,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SchedulerStats) Reset() {
	*x = SchedulerStats{}
	mi := &file_kernel_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchedulerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulerStats) ProtoMessage() {}

func (x *SchedulerStats) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulerStats.ProtoReflect.Descriptor instead.
func (*SchedulerStats) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{53}
}

func (x *SchedulerStats) GetTotalScheduled() uint64 {
	if x != nil {
		return x.TotalScheduled
	}
	return 0
}

func (x *SchedulerStats) GetContextSwitches() uint64 {
	if x != nil {
		return x.ContextSwitches
	}
	return 0
}

func (x *SchedulerStats) GetPreemptions() uint64 {
	if x != nil {
		return x.Preemptions
	}
	return 0
}

func (x *SchedulerStats) GetActiveProcesses() uint32 {
	if x != nil {
		return x.ActiveProcesses
	}
	return 0
}

func (x *SchedulerStats) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

func (x *SchedulerStats) GetQuantumMicros() uint64 {
	if x != nil {
		return x.QuantumMicros
	}
	return 0
}

type SetSchedulingPolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Policy        string                 `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"` // "RoundRobin", "Priority", or "Fair"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetSchedulingPolicyRequest) Reset() {
	*x = SetSchedulingPolicyRequest{}
	mi := &file_kernel_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSchedulingPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSchedulingPolicyRequest) ProtoMessage() {}

func (x *SetSchedulingPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSchedulingPolicyRequest.ProtoReflect.Descriptor instead.
func (*SetSchedulingPolicyRequest) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{54}
}

func (x *SetSchedulingPolicyRequest) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

type SetSchedulingPolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetSchedulingPolicyResponse) Reset() {
	*x = SetSchedulingPolicyResponse{}
	mi := &file_kernel_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSchedulingPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSchedulingPolicyResponse) ProtoMessage() {}

func (x *SetSchedulingPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSchedulingPolicyResponse.ProtoReflect.Descriptor instead.
func (*SetSchedulingPolicyResponse) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{55}
}

func (x *SetSchedulingPolicyResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SetSchedulingPolicyResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_kernel_proto protoreflect.FileDescriptor

const file_kernel_proto_rawDesc = "" +
	"\n" +
	"\fkernel.proto\x12\x06kernel\"\x83\x10\n" +
	"\x0eSyscallRequest\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\rR\x03pid\x123\n" +
	"\tread_file\x18\n" +
	" \x01(\v2\x14.kernel.ReadFileCallH\x00R\breadFile\x126\n" +
	"\n" +
	"write_file\x18\v \x01(\v2\x15.kernel.WriteFileCallH\x00R\twriteFile\x129\n" +
	"\vcreate_file\x18\f \x01(\v2\x16.kernel.CreateFileCallH\x00R\n" +
	"createFile\x129\n" +
	"\vdelete_file\x18\r \x01(\v2\x16.kernel.DeleteFileCallH\x00R\n" +
	"deleteFile\x12B\n" +
	"\x0elist_directory\x18\x0e \x01(\v2\x19.kernel.ListDirectoryCallH\x00R\rlistDirectory\x129\n" +
	"\vfile_exists\x18\x0f \x01(\v2\x16.kernel.FileExistsCallH\x00R\n" +
	"fileExists\x123\n" +
	"\tfile_stat\x18\x10 \x01(\v2\x14.kernel.FileStatCallH\x00R\bfileStat\x123\n" +
	"\tmove_file\x18\x11 \x01(\v2\x14.kernel.MoveFileCallH\x00R\bmoveFile\x123\n" +
	"\tcopy_file\x18\x12 \x01(\v2\x14.kernel.CopyFileCallH\x00R\bcopyFile\x12H\n" +
	"\x10create_directory\x18\x13 \x01(\v2\x1b.kernel.CreateDirectoryCallH\x00R\x0fcreateDirectory\x12?\n" +
	"\rspawn_process\x18\x14 \x01(\v2\x18.kernel.SpawnProcessCallH\x00R\fspawnProcess\x12<\n" +
	"\fkill_process\x18\x15 \x01(\v2\x17.kernel.KillProcessCallH\x00R\vkillProcess\x12C\n" +
	"\x0fget_system_info\x18\x1e \x01(\v2\x19.kernel.GetSystemInfoCallH\x00R\rgetSystemInfo\x12F\n" +
	"\x10get_current_time\x18\x1f \x01(\v2\x1a.kernel.GetCurrentTimeCallH\x00R\x0egetCurrentTime\x127\n" +
	"\vget_env_var\x18  \x01(\v2\x15.kernel.GetEnvVarCallH\x00R\tgetEnvVar\x12E\n" +
	"\x0fnetwork_request\x18( \x01(\v2\x1a.kernel.NetworkRequestCallH\x00R\x0enetworkRequest\x129\n" +
	"\vcreate_pipe\x182 \x01(\v2\x16.kernel.CreatePipeCallH\x00R\n" +
	"createPipe\x126\n" +
	"\n" +
	"write_pipe\x183 \x01(\v2\x15.kernel.WritePipeCallH\x00R\twritePipe\x123\n" +
	"\tread_pipe\x184 \x01(\v2\x14.kernel.ReadPipeCallH\x00R\breadPipe\x126\n" +
	"\n" +
	"close_pipe\x185 \x01(\v2\x15.kernel.ClosePipeCallH\x00R\tclosePipe\x12<\n" +
	"\fdestroy_pipe\x186 \x01(\v2\x17.kernel.DestroyPipeCallH\x00R\vdestroyPipe\x126\n" +
	"\n" +
	"pipe_stats\x187 \x01(\v2\x15.kernel.PipeStatsCallH\x00R\tpipeStats\x126\n" +
	"\n" +
	"create_shm\x18< \x01(\v2\x15.kernel.CreateShmCallH\x00R\tcreateShm\x126\n" +
	"\n" +
	"attach_shm\x18= \x01(\v2\x15.kernel.AttachShmCallH\x00R\tattachShm\x126\n" +
	"\n" +
	"detach_shm\x18> \x01(\v2\x15.kernel.DetachShmCallH\x00R\tdetachShm\x123\n" +
	"\twrite_shm\x18? \x01(\v2\x14.kernel.WriteShmCallH\x00R\bwriteShm\x120\n" +
	"\bread_shm\x18@ \x01(\v2\x13.kernel.ReadShmCallH\x00R\areadShm\x129\n" +
	"\vdestroy_shm\x18A \x01(\v2\x16.kernel.DestroyShmCallH\x00R\n" +
	"destroyShm\x123\n" +
	"\tshm_stats\x18B \x01(\v2\x14.kernel.ShmStatsCallH\x00R\bshmStats\x12?\n" +
	"\rschedule_next\x18F \x01(\v2\x18.kernel.ScheduleNextCallH\x00R\fscheduleNext\x12?\n" +
	"\ryield_process\x18G \x01(\v2\x18.kernel.YieldProcessCallH\x00R\fyieldProcess\x12U\n" +
	"\x15get_current_scheduled\x18H \x01(\v2\x1f.kernel.GetCurrentScheduledCallH\x00R\x13getCurrentScheduled\x12O\n" +
	"\x13get_scheduler_stats\x18I \x01(\v2\x1d.kernel.GetSchedulerStatsCallH\x00R\x11getSchedulerStatsB\t\n" +
	"\asyscall\"\xca\x01\n" +
	"\x0fSyscallResponse\x121\n" +
	"\asuccess\x18\x01 \x01(\v2\x15.kernel.SuccessResultH\x00R\asuccess\x12+\n" +
	"\x05error\x18\x02 \x01(\v2\x13.kernel.ErrorResultH\x00R\x05error\x12M\n" +
	"\x11permission_denied\x18\x03 \x01(\v2\x1e.kernel.PermissionDeniedResultH\x00R\x10permissionDeniedB\b\n" +
	"\x06result\"#\n" +
	"\rSuccessResult\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"'\n" +
	"\vErrorResult\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"0\n" +
	"\x16PermissionDeniedResult\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\tR\x06reason\"\"\n" +
	"\fReadFileCall\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"7\n" +
	"\rWriteFileCall\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"$\n" +
	"\x0eCreateFileCall\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"$\n" +
	"\x0eDeleteFileCall\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"'\n" +
	"\x11ListDirectoryCall\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"$\n" +
	"\x0eFileExistsCall\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"\"\n" +
	"\fFileStatCall\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"H\n" +
	"\fMoveFileCall\x12\x16\n" +
	"\x06source\x18\x01 \x01(\tR\x06source\x12 \n" +
	"\vdestination\x18\x02 \x01(\tR\vdestination\"H\n" +
	"\fCopyFileCall\x12\x16\n" +
	"\x06source\x18\x01 \x01(\tR\x06source\x12 \n" +
	"\vdestination\x18\x02 \x01(\tR\vdestination\")\n" +
	"\x13CreateDirectoryCall\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"@\n" +
	"\x10SpawnProcessCall\x12\x18\n" +
	"\acommand\x18\x01 \x01(\tR\acommand\x12\x12\n" +
	"\x04args\x18\x02 \x03(\tR\x04args\"0\n" +
	"\x0fKillProcessCall\x12\x1d\n" +
	"\n" +
	"target_pid\x18\x01 \x01(\rR\ttargetPid\"\x13\n" +
	"\x11GetSystemInfoCall\"\x14\n" +
	"\x12GetCurrentTimeCall\"!\n" +
	"\rGetEnvVarCall\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\"&\n" +
	"\x12NetworkRequestCall\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"|\n" +
	"\x0eCreatePipeCall\x12\x1d\n" +
	"\n" +
	"reader_pid\x18\x01 \x01(\rR\treaderPid\x12\x1d\n" +
	"\n" +
	"writer_pid\x18\x02 \x01(\rR\twriterPid\x12\x1f\n" +
	"\bcapacity\x18\x03 \x01(\rH\x00R\bcapacity\x88\x01\x01B\v\n" +
	"\t_capacity\"<\n" +
	"\rWritePipeCall\x12\x17\n" +
	"\apipe_id\x18\x01 \x01(\rR\x06pipeId\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\";\n" +
	"\fReadPipeCall\x12\x17\n" +
	"\apipe_id\x18\x01 \x01(\rR\x06pipeId\x12\x12\n" +
	"\x04size\x18\x02 \x01(\rR\x04size\"(\n" +
	"\rClosePipeCall\x12\x17\n" +
	"\apipe_id\x18\x01 \x01(\rR\x06pipeId\"*\n" +
	"\x0fDestroyPipeCall\x12\x17\n" +
	"\apipe_id\x18\x01 \x01(\rR\x06pipeId\"(\n" +
	"\rPipeStatsCall\x12\x17\n" +
	"\apipe_id\x18\x01 \x01(\rR\x06pipeId\"#\n" +
	"\rCreateShmCall\x12\x12\n" +
	"\x04size\x18\x01 \x01(\rR\x04size\"K\n" +
	"\rAttachShmCall\x12\x1d\n" +
	"\n" +
	"segment_id\x18\x01 \x01(\rR\tsegmentId\x12\x1b\n" +
	"\tread_only\x18\x02 \x01(\bR\breadOnly\".\n" +
	"\rDetachShmCall\x12\x1d\n" +
	"\n" +
	"segment_id\x18\x01 \x01(\rR\tsegmentId\"Y\n" +
	"\fWriteShmCall\x12\x1d\n" +
	"\n" +
	"segment_id\x18\x01 \x01(\rR\tsegmentId\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\rR\x06offset\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\"X\n" +
	"\vReadShmCall\x12\x1d\n" +
	"\n" +
	"segment_id\x18\x01 \x01(\rR\tsegmentId\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\rR\x06offset\x12\x12\n" +
	"\x04size\x18\x03 \x01(\rR\x04size\"/\n" +
	"\x0eDestroyShmCall\x12\x1d\n" +
	"\n" +
	"segment_id\x18\x01 \x01(\rR\tsegmentId\"-\n" +
	"\fShmStatsCall\x12\x1d\n" +
	"\n" +
	"segment_id\x18\x01 \x01(\rR\tsegmentId\"\x12\n" +
	"\x10ScheduleNextCall\"\x12\n" +
	"\x10YieldProcessCall\"\x19\n" +
	"\x17GetCurrentScheduledCall\"\x17\n" +
	"\x15GetSchedulerStatsCall\"\xdb\x01\n" +
	"\x14CreateProcessRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bpriority\x18\x02 \x01(\rR\bpriority\x129\n" +
	"\rsandbox_level\x18\x03 \x01(\x0e2\x14.kernel.SandboxLevelR\fsandboxLevel\x12\x1d\n" +
	"\acommand\x18\x04 \x01(\tH\x00R\acommand\x88\x01\x01\x12\x12\n" +
	"\x04args\x18\x05 \x03(\tR\x04args\x12\x19\n" +
	"\benv_vars\x18\x06 \x03(\tR\aenvVarsB\n" +
	"\n" +
	"\b_command\"\x80\x01\n" +
	"\x15CreateProcessResponse\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\rR\x03pid\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x12\x1a\n" +
	"\x06os_pid\x18\x04 \x01(\rH\x00R\x05osPid\x88\x01\x01B\t\n" +
	"\a_os_pid\"\xda\x01\n" +
	"\x14UpdateSandboxRequest\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\rR\x03pid\x126\n" +
	"\fcapabilities\x18\x02 \x03(\x0e2\x12.kernel.CapabilityR\fcapabilities\x12#\n" +
	"\rallowed_paths\x18\x03 \x03(\tR\fallowedPaths\x12#\n" +
	"\rblocked_paths\x18\x04 \x03(\tR\fblockedPaths\x12.\n" +
	"\x06limits\x18\x05 \x01(\v2\x16.kernel.ResourceLimitsR\x06limits\"G\n" +
	"\x15UpdateSandboxResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\xf0\x01\n" +
	"\x0eResourceLimits\x12(\n" +
	"\x10max_memory_bytes\x18\x01 \x01(\x04R\x0emaxMemoryBytes\x12%\n" +
	"\x0fmax_cpu_time_ms\x18\x02 \x01(\x04R\fmaxCpuTimeMs\x120\n" +
	"\x14max_file_descriptors\x18\x03 \x01(\rR\x12maxFileDescriptors\x12#\n" +
	"\rmax_processes\x18\x04 \x01(\rR\fmaxProcesses\x126\n" +
	"\x17max_network_connections\x18\x05 \x01(\rR\x15maxNetworkConnections\"5\n" +
	"\x12EventStreamRequest\x12\x1f\n" +
	"\vevent_types\x18\x01 \x03(\tR\n" +
	"eventTypes\"\xe6\x02\n" +
	"\vKernelEvent\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x04R\ttimestamp\x12F\n" +
	"\x0fprocess_created\x18\n" +
	" \x01(\v2\x1b.kernel.ProcessCreatedEventH\x00R\x0eprocessCreated\x12O\n" +
	"\x12process_terminated\x18\v \x01(\v2\x1e.kernel.ProcessTerminatedEventH\x00R\x11processTerminated\x12I\n" +
	"\x10syscall_executed\x18\f \x01(\v2\x1c.kernel.SyscallExecutedEventH\x00R\x0fsyscallExecuted\x12L\n" +
	"\x11permission_denied\x18\r \x01(\v2\x1d.kernel.PermissionDeniedEventH\x00R\x10permissionDeniedB\a\n" +
	"\x05event\";\n" +
	"\x13ProcessCreatedEvent\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\rR\x03pid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"G\n" +
	"\x16ProcessTerminatedEvent\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\rR\x03pid\x12\x1b\n" +
	"\texit_code\x18\x02 \x01(\x05R\bexitCode\"e\n" +
	"\x14SyscallExecutedEvent\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\rR\x03pid\x12!\n" +
	"\fsyscall_type\x18\x02 \x01(\tR\vsyscallType\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\"d\n" +
	"\x15PermissionDeniedEvent\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\rR\x03pid\x12!\n" +
	"\fsyscall_type\x18\x02 \x01(\tR\vsyscallType\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"\x15\n" +
	"\x13ScheduleNextRequest\"s\n" +
	"\x14ScheduleNextResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1e\n" +
	"\bnext_pid\x18\x02 \x01(\rH\x00R\anextPid\x88\x01\x01\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05errorB\v\n" +
	"\t_next_pid\"\x1a\n" +
	"\x18GetSchedulerStatsRequest\"y\n" +
	"\x19GetSchedulerStatsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12,\n" +
	"\x05stats\x18\x02 \x01(\v2\x16.kernel.SchedulerStatsR\x05stats\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"\xf0\x01\n" +
	"\x0eSchedulerStats\x12'\n" +
	"\x0ftotal_scheduled\x18\x01 \x01(\x04R\x0etotalScheduled\x12)\n" +
	"\x10context_switches\x18\x02 \x01(\x04R\x0fcontextSwitches\x12 \n" +
	"\vpreemptions\x18\x03 \x01(\x04R\vpreemptions\x12)\n" +
	"\x10active_processes\x18\x04 \x01(\rR\x0factiveProcesses\x12\x16\n" +
	"\x06policy\x18\x05 \x01(\tR\x06policy\x12%\n" +
	"\x0equantum_micros\x18\x06 \x01(\x04R\rquantumMicros\"4\n" +
	"\x1aSetSchedulingPolicyRequest\x12\x16\n" +
	"\x06policy\x18\x01 \x01(\tR\x06policy\"M\n" +
	"\x1bSetSchedulingPolicyResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error*9\n" +
	"\fSandboxLevel\x12\v\n" +
	"\aMINIMAL\x10\x00\x12\f\n" +
	"\bSTANDARD\x10\x01\x12\x0e\n" +
	"\n" +
	"PRIVILEGED\x10\x02*\xf2\x01\n" +
	"\n" +
	"Capability\x12\r\n" +
	"\tREAD_FILE\x10\x00\x12\x0e\n" +
	"\n" +
	"WRITE_FILE\x10\x01\x12\x0f\n" +
	"\vCREATE_FILE\x10\x02\x12\x0f\n" +
	"\vDELETE_FILE\x10\x03\x12\x12\n" +
	"\x0eLIST_DIRECTORY\x10\x04\x12\x11\n" +
	"\rSPAWN_PROCESS\x10\x05\x12\x10\n" +
	"\fKILL_PROCESS\x10\x06\x12\x12\n" +
	"\x0eNETWORK_ACCESS\x10\a\x12\r\n" +
	"\tBIND_PORT\x10\b\x12\x0f\n" +
	"\vSYSTEM_INFO\x10\t\x12\x0f\n" +
	"\vTIME_ACCESS\x10\n" +
	"\x12\x10\n" +
	"\fSEND_MESSAGE\x10\v\x12\x13\n" +
	"\x0fRECEIVE_MESSAGE\x10\f2\xb6\x04\n" +
	"\rKernelService\x12A\n" +
	"\x0eExecuteSyscall\x12\x16.kernel.SyscallRequest\x1a\x17.kernel.SyscallResponse\x12L\n" +
	"\rCreateProcess\x12\x1c.kernel.CreateProcessRequest\x1a\x1d.kernel.CreateProcessResponse\x12L\n" +
	"\rUpdateSandbox\x12\x1c.kernel.UpdateSandboxRequest\x1a\x1d.kernel.UpdateSandboxResponse\x12I\n" +
	"\fScheduleNext\x12\x1b.kernel.ScheduleNextRequest\x1a\x1c.kernel.ScheduleNextResponse\x12X\n" +
	"\x11GetSchedulerStats\x12 .kernel.GetSchedulerStatsRequest\x1a!.kernel.GetSchedulerStatsResponse\x12^\n" +
	"\x13SetSchedulingPolicy\x12\".kernel.SetSchedulingPolicyRequest\x1a#.kernel.SetSchedulingPolicyResponse\x12A\n" +
	"\fStreamEvents\x12\x1a.kernel.EventStreamRequest\x1a\x13.kernel.KernelEvent0\x01B8Z6github.com/GriffinCanCode/AgentOS/backend/proto/kernelb\x06proto3"

var (
	file_kernel_proto_rawDescOnce sync.Once
	file_kernel_proto_rawDescData []byte
)

func file_kernel_proto_rawDescGZIP() []byte {
	file_kernel_proto_rawDescOnce.Do(func() {
		file_kernel_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kernel_proto_rawDesc), len(file_kernel_proto_rawDesc)))
	})
	return file_kernel_proto_rawDescData
}

var file_kernel_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_kernel_proto_msgTypes = make([]protoimpl.MessageInfo, 56)
var file_kernel_proto_goTypes = []any{
	(SandboxLevel)(0),                   // 0: kernel.SandboxLevel
	(Capability)(0),                     // 1: kernel.Capability
	(*SyscallRequest)(nil),              // 2: kernel.SyscallRequest
	(*SyscallResponse)(nil),             // 3: kernel.SyscallResponse
	(*SuccessResult)(nil),               // 4: kernel.SuccessResult
	(*ErrorResult)(nil),                 // 5: kernel.ErrorResult
	(*PermissionDeniedResult)(nil),      // 6: kernel.PermissionDeniedResult
	(*ReadFileCall)(nil),                // 7: kernel.ReadFileCall
	(*WriteFileCall)(nil),               // 8: kernel.WriteFileCall
	(*CreateFileCall)(nil),              // 9: kernel.CreateFileCall
	(*DeleteFileCall)(nil),              // 10: kernel.DeleteFileCall
	(*ListDirectoryCall)(nil),           // 11: kernel.ListDirectoryCall
	(*FileExistsCall)(nil),              // 12: kernel.FileExistsCall
	(*FileStatCall)(nil),                // 13: kernel.FileStatCall
	(*MoveFileCall)(nil),                // 14: kernel.MoveFileCall
	(*CopyFileCall)(nil),                // 15: kernel.CopyFileCall
	(*CreateDirectoryCall)(nil),         // 16: kernel.CreateDirectoryCall
	(*SpawnProcessCall)(nil),            // 17: kernel.SpawnProcessCall
	(*KillProcessCall)(nil),             // 18: kernel.KillProcessCall
	(*GetSystemInfoCall)(nil),           // 19: kernel.GetSystemInfoCall
	(*GetCurrentTimeCall)(nil),          // 20: kernel.GetCurrentTimeCall
	(*GetEnvVarCall)(nil),               // 21: kernel.GetEnvVarCall
	(*NetworkRequestCall)(nil),          // 22: kernel.NetworkRequestCall
	(*CreatePipeCall)(nil),              // 23: kernel.CreatePipeCall
	(*WritePipeCall)(nil),               // 24: kernel.WritePipeCall
	(*ReadPipeCall)(nil),                // 25: kernel.ReadPipeCall
	(*ClosePipeCall)(nil),               // 26: kernel.ClosePipeCall
	(*DestroyPipeCall)(nil),             // 27: kernel.DestroyPipeCall
	(*PipeStatsCall)(nil),               // 28: kernel.PipeStatsCall
	(*CreateShmCall)(nil),               // 29: kernel.CreateShmCall
	(*AttachShmCall)(nil),               // 30: kernel.AttachShmCall
	(*DetachShmCall)(nil),               // 31: kernel.DetachShmCall
	(*WriteShmCall)(nil),                // 32: kernel.WriteShmCall
	(*ReadShmCall)(nil),                 // 33: kernel.ReadShmCall
	(*DestroyShmCall)(nil),              // 34: kernel.DestroyShmCall
	(*ShmStatsCall)(nil),                // 35: kernel.ShmStatsCall
	(*ScheduleNextCall)(nil),            // 36: kernel.ScheduleNextCall
	(*YieldProcessCall)(nil),            // 37: kernel.YieldProcessCall
	(*GetCurrentScheduledCall)(nil),     // 38: kernel.GetCurrentScheduledCall
	(*GetSchedulerStatsCall)(nil),       // 39: kernel.GetSchedulerStatsCall
	(*CreateProcessRequest)(nil),        // 40: kernel.CreateProcessRequest
	(*CreateProcessResponse)(nil),       // 41: kernel.CreateProcessResponse
	(*UpdateSandboxRequest)(nil),        // 42: kernel.UpdateSandboxRequest
	(*UpdateSandboxResponse)(nil),       // 43: kernel.UpdateSandboxResponse
	(*ResourceLimits)(nil),              // 44: kernel.ResourceLimits
	(*EventStreamRequest)(nil),          // 45: kernel.EventStreamRequest
	(*KernelEvent)(nil),                 // 46: kernel.KernelEvent
	(*ProcessCreatedEvent)(nil),         // 47: kernel.ProcessCreatedEvent
	(*ProcessTerminatedEvent)(nil),      // 48: kernel.ProcessTerminatedEvent
	(*SyscallExecutedEvent)(nil),        // 49: kernel.SyscallExecutedEvent
	(*PermissionDeniedEvent)(nil),       // 50: kernel.PermissionDeniedEvent
	(*ScheduleNextRequest)(nil),         // 51: kernel.ScheduleNextRequest
	(*ScheduleNextResponse)(nil),        // 52: kernel.ScheduleNextResponse
	(*GetSchedulerStatsRequest)(nil),    // 53: kernel.GetSchedulerStatsRequest
	(*GetSchedulerStatsResponse)(nil),   // 54: kernel.GetSchedulerStatsResponse
	(*SchedulerStats)(nil),              // 55: kernel.SchedulerStats
	(*SetSchedulingPolicyRequest)(nil),  // 56: kernel.SetSchedulingPolicyRequest
	(*SetSchedulingPolicyResponse)(nil), // 57: kernel.SetSchedulingPolicyResponse
}
var file_kernel_proto_depIdxs = []int32{
	7,  // 0: kernel.SyscallRequest.read_file:type_name -> kernel.ReadFileCall
	8,  // 1: kernel.SyscallRequest.write_file:type_name -> kernel.WriteFileCall
	9,  // 2: kernel.SyscallRequest.create_file:type_name -> kernel.CreateFileCall
	10, // 3: kernel.SyscallRequest.delete_file:type_name -> kernel.DeleteFileCall
	11, // 4: kernel.SyscallRequest.list_directory:type_name -> kernel.ListDirectoryCall
	12, // 5: kernel.SyscallRequest.file_exists:type_name -> kernel.FileExistsCall
	13, // 6: kernel.SyscallRequest.file_stat:type_name -> kernel.FileStatCall
	14, // 7: kernel.SyscallRequest.move_file:type_name -> kernel.MoveFileCall
	15, // 8: kernel.SyscallRequest.copy_file:type_name -> kernel.CopyFileCall
	16, // 9: kernel.SyscallRequest.create_directory:type_name -> kernel.CreateDirectoryCall
	17, // 10: kernel.SyscallRequest.spawn_process:type_name -> kernel.SpawnProcessCall
	18, // 11: kernel.SyscallRequest.kill_process:type_name -> kernel.KillProcessCall
	19, // 12: kernel.SyscallRequest.get_system_info:type_name -> kernel.GetSystemInfoCall
	20, // 13: kernel.SyscallRequest.get_current_time:type_name -> kernel.GetCurrentTimeCall
	21, // 14: kernel.SyscallRequest.get_env_var:type_name -> kernel.GetEnvVarCall
	22, // 15: kernel.SyscallRequest.network_request:type_name -> kernel.NetworkRequestCall
	23, // 16: kernel.SyscallRequest.create_pipe:type_name -> kernel.CreatePipeCall
	24, // 17: kernel.SyscallRequest.write_pipe:type_name -> kernel.WritePipeCall
	25, // 18: kernel.SyscallRequest.read_pipe:type_name -> kernel.ReadPipeCall
	26, // 19: kernel.SyscallRequest.close_pipe:type_name -> kernel.ClosePipeCall
	27, // 20: kernel.SyscallRequest.destroy_pipe:type_name -> kernel.DestroyPipeCall
	28, // 21: kernel.SyscallRequest.pipe_stats:type_name -> kernel.PipeStatsCall
	29, // 22: kernel.SyscallRequest.create_shm:type_name -> kernel.CreateShmCall
	30, // 23: kernel.SyscallRequest.attach_shm:type_name -> kernel.AttachShmCall
	31, // 24: kernel.SyscallRequest.detach_shm:type_name -> kernel.DetachShmCall
	32, // 25: kernel.SyscallRequest.write_shm:type_name -> kernel.WriteShmCall
	33, // 26: kernel.SyscallRequest.read_shm:type_name -> kernel.ReadShmCall
	34, // 27: kernel.SyscallRequest.destroy_shm:type_name -> kernel.DestroyShmCall
	35, // 28: kernel.SyscallRequest.shm_stats:type_name -> kernel.ShmStatsCall
	36, // 29: kernel.SyscallRequest.schedule_next:type_name -> kernel.ScheduleNextCall
	37, // 30: kernel.SyscallRequest.yield_process:type_name -> kernel.YieldProcessCall
	38, // 31: kernel.SyscallRequest.get_current_scheduled:type_name -> kernel.GetCurrentScheduledCall
	39, // 32: kernel.SyscallRequest.get_scheduler_stats:type_name -> kernel.GetSchedulerStatsCall
	4,  // 33: kernel.SyscallResponse.success:type_name -> kernel.SuccessResult
	5,  // 34: kernel.SyscallResponse.error:type_name -> kernel.ErrorResult
	6,  // 35: kernel.SyscallResponse.permission_denied:type_name -> kernel.PermissionDeniedResult
	0,  // 36: kernel.CreateProcessRequest.sandbox_level:type_name -> kernel.SandboxLevel
	1,  // 37: kernel.UpdateSandboxRequest.capabilities:type_name -> kernel.Capability
	44, // 38: kernel.UpdateSandboxRequest.limits:type_name -> kernel.ResourceLimits
	47, // 39: kernel.KernelEvent.process_created:type_name -> kernel.ProcessCreatedEvent
	48, // 40: kernel.KernelEvent.process_terminated:type_name -> kernel.ProcessTerminatedEvent
	49, // 41: kernel.KernelEvent.syscall_executed:type_name -> kernel.SyscallExecutedEvent
	50, // 42: kernel.KernelEvent.permission_denied:type_name -> kernel.PermissionDeniedEvent
	55, // 43: kernel.GetSchedulerStatsResponse.stats:type_name -> kernel.SchedulerStats
	2,  // 44: kernel.KernelService.ExecuteSyscall:input_type -> kernel.SyscallRequest
	40, // 45: kernel.KernelService.CreateProcess:input_type -> kernel.CreateProcessRequest
	42, // 46: kernel.KernelService.UpdateSandbox:input_type -> kernel.UpdateSandboxRequest
	51, // 47: kernel.KernelService.ScheduleNext:input_type -> kernel.ScheduleNextRequest
	53, // 48: kernel.KernelService.GetSchedulerStats:input_type -> kernel.GetSchedulerStatsRequest
	56, // 49: kernel.KernelService.SetSchedulingPolicy:input_type -> kernel.SetSchedulingPolicyRequest
	45, // 50: kernel.KernelService.StreamEvents:input_type -> kernel.EventStreamRequest
	3,  // 51: kernel.KernelService.ExecuteSyscall:output_type -> kernel.SyscallResponse
	41, // 52: kernel.KernelService.CreateProcess:output_type -> kernel.CreateProcessResponse
	43, // 53: kernel.KernelService.UpdateSandbox:output_type -> kernel.UpdateSandboxResponse
	52, // 54: kernel.KernelService.ScheduleNext:output_type -> kernel.ScheduleNextResponse
	54, // 55: kernel.KernelService.GetSchedulerStats:output_type -> kernel.GetSchedulerStatsResponse
	57, // 56: kernel.KernelService.SetSchedulingPolicy:output_type -> kernel.SetSchedulingPolicyResponse
	46, // 57: kernel.KernelService.StreamEvents:output_type -> kernel.KernelEvent
	51, // [51:58] is the sub-list for method output_type
	44, // [44:51] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_kernel_proto_init() }
func file_kernel_proto_init() {
	if File_kernel_proto != nil {
		return
	}
	file_kernel_proto_msgTypes[0].OneofWrappers = []any{
		(*SyscallRequest_ReadFile)(nil),
		(*SyscallRequest_WriteFile)(nil),
		(*SyscallRequest_CreateFile)(nil),
		(*SyscallRequest_DeleteFile)(nil),
		(*SyscallRequest_ListDirectory)(nil),
		(*SyscallRequest_FileExists)(nil),
		(*SyscallRequest_FileStat)(nil),
		(*SyscallRequest_MoveFile)(nil),
		(*SyscallRequest_CopyFile)(nil),
		(*SyscallRequest_CreateDirectory)(nil),
		(*SyscallRequest_SpawnProcess)(nil),
		(*SyscallRequest_KillProcess)(nil),
		(*SyscallRequest_GetSystemInfo)(nil),
		(*SyscallRequest_GetCurrentTime)(nil),
		(*SyscallRequest_GetEnvVar)(nil),
		(*SyscallRequest_NetworkRequest)(nil),
		(*SyscallRequest_CreatePipe)(nil),
		(*SyscallRequest_WritePipe)(nil),
		(*SyscallRequest_ReadPipe)(nil),
		(*SyscallRequest_ClosePipe)(nil),
		(*SyscallRequest_DestroyPipe)(nil),
		(*SyscallRequest_PipeStats)(nil),
		(*SyscallRequest_CreateShm)(nil),
		(*SyscallRequest_AttachShm)(nil),
		(*SyscallRequest_DetachShm)(nil),
		(*SyscallRequest_WriteShm)(nil),
		(*SyscallRequest_ReadShm)(nil),
		(*SyscallRequest_DestroyShm)(nil),
		(*SyscallRequest_ShmStats)(nil),
		(*SyscallRequest_ScheduleNext)(nil),
		(*SyscallRequest_YieldProcess)(nil),
		(*SyscallRequest_GetCurrentScheduled)(nil),
		(*SyscallRequest_GetSchedulerStats)(nil),
	}
	file_kernel_proto_msgTypes[1].OneofWrappers = []any{
		(*SyscallResponse_Success)(nil),
		(*SyscallResponse_Error)(nil),
		(*SyscallResponse_PermissionDenied)(nil),
	}
	file_kernel_proto_msgTypes[21].OneofWrappers = []any{}
	file_kernel_proto_msgTypes[38].OneofWrappers = []any{}
	file_kernel_proto_msgTypes[39].OneofWrappers = []any{}
	file_kernel_proto_msgTypes[44].OneofWrappers = []any{
		(*KernelEvent_ProcessCreated)(nil),
		(*KernelEvent_ProcessTerminated)(nil),
		(*KernelEvent_SyscallExecuted)(nil),
		(*KernelEvent_PermissionDenied)(nil),
	}
	file_kernel_proto_msgTypes[50].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kernel_proto_rawDesc), len(file_kernel_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   56,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kernel_proto_goTypes,
		DependencyIndexes: file_kernel_proto_depIdxs,
		EnumInfos:         file_kernel_proto_enumTypes,
		MessageInfos:      file_kernel_proto_msgTypes,
	}.Build()
	File_kernel_proto = out.File
	file_kernel_proto_goTypes = nil
	file_kernel_proto_depIdxs = nil
}
