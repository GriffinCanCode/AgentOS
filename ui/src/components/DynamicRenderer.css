.dynamic-renderer {
  display: flex;
  flex-direction: column;
  height: 100%;
}

.renderer-header {
  padding: 1rem;
  border-bottom: 1px solid var(--color-dark-border);
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.renderer-header h3 {
  font-size: 1rem;
  font-weight: 600;
}

.renderer-status {
  font-size: 0.75rem;
  padding: 0.25rem 0.5rem;
  border-radius: 0.25rem;
  color: white;
}

.renderer-status.active {
  background: var(--color-success-green);
}

.renderer-canvas {
  flex: 1;
  overflow: auto;
  padding: 1.5rem;
  background: radial-gradient(
    circle at center,
    var(--color-dark-hover) 0%,
    var(--color-dark-bg) 100%
  );
}

.placeholder {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  gap: 1rem;
  opacity: 0.7;
}

.placeholder-icon {
  font-size: 4rem;
  animation: float 3s ease-in-out infinite;
}

@keyframes float {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

.placeholder h2 {
  font-size: 1.5rem;
  font-weight: 600;
}

.placeholder p {
  font-size: 0.875rem;
  opacity: 0.7;
}

.example-apps {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 0.75rem;
  margin-top: 1.5rem;
}

.app-card {
  padding: 1.5rem;
  background: var(--color-dark-hover);
  border: 1px solid var(--color-dark-border);
  border-radius: 0.5rem;
  text-align: center;
  cursor: pointer;
  transition: all 0.2s ease;
}

.app-card:hover {
  background: var(--color-dark-accent);
  border-color: var(--color-dark-accent);
  transform: translateY(-2px);
}

/* Renderer Error */
.renderer-error {
  padding: 1rem;
  background: color-mix(in srgb, var(--color-error-red) 10%, transparent);
  border: 1px solid color-mix(in srgb, var(--color-error-red) 30%, transparent);
  border-radius: 0.5rem;
  color: var(--color-error-red);
  margin-bottom: 1rem;
}

/* Rendered App Container */
.rendered-app {
  background: var(--color-dark-hover);
  border: 1px solid var(--color-dark-border);
  border-radius: 0.75rem;
  padding: 1.5rem;
  max-width: 600px;
  margin: 0 auto;
}

.app-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
  padding-bottom: 1rem;
  border-bottom: 1px solid var(--color-dark-border);
}

.app-header h2 {
  margin: 0;
  color: #fff;
  font-size: 1.5rem;
  font-weight: 600;
}

.save-app-btn {
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  font-size: 0.875rem;
  font-weight: 500;
  background: rgba(59, 130, 246, 0.2);
  color: rgb(96, 165, 250);
  border: 1px solid rgba(59, 130, 246, 0.3);
  cursor: pointer;
  transition: all 0.2s;
}

.save-app-btn:hover {
  background: rgba(59, 130, 246, 0.3);
  border-color: rgba(59, 130, 246, 0.5);
  color: rgb(147, 197, 253);
}

.app-content {
  display: flex;
  gap: 1rem;
}

.app-layout-vertical {
  flex-direction: column;
}

.app-layout-horizontal {
  flex-direction: row;
}

/* Dynamic Components */
.dynamic-button {
  padding: 0.75rem 1.5rem;
  background: color-mix(in srgb, var(--color-primary-blue) 20%, transparent);
  border: 1px solid color-mix(in srgb, var(--color-primary-blue) 40%, transparent);
  border-radius: 0.5rem;
  color: #fff;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  min-height: 3rem;
}

.dynamic-button:hover {
  background: color-mix(in srgb, var(--color-primary-blue) 30%, transparent);
  border-color: color-mix(in srgb, var(--color-primary-blue) 60%, transparent);
  transform: translateY(-1px);
}

.dynamic-button:active {
  transform: translateY(0);
  background: color-mix(in srgb, var(--color-primary-blue) 40%, transparent);
}

.dynamic-input {
  width: 100%;
  padding: 0.75rem 1rem;
  background: color-mix(in srgb, #000 30%, transparent);
  border: 1px solid var(--color-dark-border);
  border-radius: 0.5rem;
  color: #fff;
  font-size: 1rem;
  transition: all 0.2s ease;
}

.dynamic-input:focus {
  outline: none;
  border-color: color-mix(in srgb, var(--color-primary-blue) 60%, transparent);
  background: color-mix(in srgb, #000 40%, transparent);
}

.dynamic-input[readonly] {
  cursor: default;
  background: color-mix(in srgb, #000 50%, transparent);
}

.dynamic-text {
  color: #fff;
  margin: 0;
}

.dynamic-text-h1 {
  font-size: 2rem;
  font-weight: 700;
}

.dynamic-text-h2 {
  font-size: 1.5rem;
  font-weight: 600;
}

.dynamic-text-body {
  font-size: 1rem;
  font-weight: 400;
}

.dynamic-text-caption {
  font-size: 0.875rem;
  color: color-mix(in srgb, #fff 70%, transparent);
}

.dynamic-container {
  display: flex;
}

.dynamic-container-vertical {
  flex-direction: column;
}

.dynamic-container-horizontal {
  flex-direction: row;
}

.dynamic-grid {
  display: grid;
  width: 100%;
}

.dynamic-unknown {
  padding: 1rem;
  background: color-mix(in srgb, #fb923c 10%, transparent);
  border: 1px dashed color-mix(in srgb, #fb923c 30%, transparent);
  border-radius: 0.5rem;
  color: #fb923c;
  text-align: center;
}

/* Generation Progress UI */
.generation-progress {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 400px;
  gap: 1.5rem;
}

.generation-header {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.generation-header h3 {
  font-size: 1.5rem;
  font-weight: 600;
  color: #fff;
  margin: 0;
}

.spinner {
  width: 2rem;
  height: 2rem;
  border: 3px solid color-mix(in srgb, var(--color-primary-blue) 20%, transparent);
  border-top-color: var(--color-primary-blue);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.thoughts-list {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  max-width: 600px;
  width: 100%;
}

.thought-item {
  display: flex;
  align-items: flex-start;
  gap: 0.75rem;
  padding: 1rem;
  background: color-mix(in srgb, var(--color-primary-blue) 5%, transparent);
  border: 1px solid color-mix(in srgb, var(--color-primary-blue) 20%, transparent);
  border-radius: 0.5rem;
  animation: fade-in 0.3s ease-out;
}

.thought-icon {
  font-size: 1.25rem;
  flex-shrink: 0;
}

.thought-text {
  color: color-mix(in srgb, #fff 90%, transparent);
  font-size: 0.875rem;
  line-height: 1.6;
}

@keyframes fade-in {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fade-in {
  animation: fade-in 0.3s ease-out;
}

/* Generation Preview - Live Streaming Display */
.generation-preview {
  width: 100%;
  max-width: 700px;
  margin-top: 1rem;
  background: color-mix(in srgb, #000 40%, transparent);
  border: 1px solid color-mix(in srgb, var(--color-success-green) 30%, transparent);
  border-radius: 0.5rem;
  overflow: hidden;
  animation: fade-in 0.3s ease-out;
}

.preview-header {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1rem;
  background: color-mix(in srgb, var(--color-success-green) 10%, transparent);
  border-bottom: 1px solid color-mix(in srgb, var(--color-success-green) 20%, transparent);
}

.preview-icon {
  font-size: 1rem;
  animation: pulse 1.5s ease-in-out infinite;
}

@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

.preview-label {
  font-size: 0.75rem;
  font-weight: 600;
  color: var(--color-success-green);
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.preview-content {
  margin: 0;
  padding: 1rem;
  max-height: 400px;
  overflow-y: auto;
  font-family: "Monaco", "Menlo", "Ubuntu Mono", monospace;
  font-size: 0.75rem;
  line-height: 1.5;
  color: color-mix(in srgb, var(--color-success-green) 90%, #fff);
  background: color-mix(in srgb, #000 60%, transparent);
  white-space: pre-wrap;
  word-break: break-all;
}

.preview-content code {
  font-family: inherit;
  color: inherit;
}

/* Scrollbar styling for preview */
.preview-content::-webkit-scrollbar {
  width: 8px;
}

.preview-content::-webkit-scrollbar-track {
  background: color-mix(in srgb, #000 40%, transparent);
}

.preview-content::-webkit-scrollbar-thumb {
  background: color-mix(in srgb, var(--color-success-green) 30%, transparent);
  border-radius: 4px;
}

.preview-content::-webkit-scrollbar-thumb:hover {
  background: color-mix(in srgb, var(--color-success-green) 50%, transparent);
}

/* ============================================================================
   VISUAL BUILD MODE - Watch the app get constructed in real-time
   ============================================================================ */

/* Container for the building app preview */
.building-app-preview {
  position: relative;
  padding: 2rem;
  background: linear-gradient(
    135deg,
    color-mix(in srgb, var(--color-electric-blue) 8%, transparent),
    color-mix(in srgb, var(--color-neon-purple) 8%, transparent)
  );
  border-radius: 16px;
  border: 2px solid color-mix(in srgb, var(--color-electric-blue) 20%, transparent);
  overflow: hidden;
}

/* Animated construction grid background */
.building-app-preview::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: 
    linear-gradient(color-mix(in srgb, var(--color-electric-blue) 10%, transparent) 1px, transparent 1px),
    linear-gradient(90deg, color-mix(in srgb, var(--color-electric-blue) 10%, transparent) 1px, transparent 1px);
  background-size: 20px 20px;
  opacity: 0.3;
  animation: grid-scan 3s linear infinite;
  pointer-events: none;
  z-index: 0;
}

@keyframes grid-scan {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 20px 20px;
  }
}

/* Build progress header */
.build-progress-header {
  position: relative;
  z-index: 1;
  margin-bottom: 1.5rem;
  display: flex;
  align-items: center;
  gap: 1rem;
}

.build-status-icon {
  font-size: 2rem;
  animation: build-pulse 1.5s ease-in-out infinite;
}

@keyframes build-pulse {
  0%, 100% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.1);
    opacity: 0.8;
  }
}

.build-status-text h3 {
  margin: 0;
  font-size: 1.25rem;
  color: var(--color-text-primary);
  font-weight: 600;
}

.build-status-text p {
  margin: 0.25rem 0 0 0;
  font-size: 0.875rem;
  color: var(--color-text-secondary);
}

/* Progress bar */
.build-progress-bar {
  position: relative;
  height: 6px;
  background: color-mix(in srgb, #000 40%, transparent);
  border-radius: 3px;
  overflow: hidden;
  margin-bottom: 1.5rem;
  z-index: 1;
}

.build-progress-fill {
  height: 100%;
  background: linear-gradient(
    90deg,
    var(--color-electric-blue),
    var(--color-neon-purple),
    var(--color-electric-blue)
  );
  background-size: 200% 100%;
  border-radius: 3px;
  transition: width 0.3s ease-out;
  animation: progress-shimmer 2s linear infinite;
  position: relative;
}

.build-progress-fill::after {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  width: 20px;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4));
  animation: progress-glow 1s ease-in-out infinite;
}

@keyframes progress-shimmer {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

@keyframes progress-glow {
  0%, 100% {
    opacity: 0.5;
  }
  50% {
    opacity: 1;
  }
}

/* Building app container */
.building-app-container {
  position: relative;
  z-index: 1;
  background: var(--color-surface);
  border-radius: 12px;
  padding: 1.5rem;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
}

.building-app-title {
  font-size: 1.5rem;
  font-weight: 600;
  color: var(--color-text-primary);
  margin: 0 0 1rem 0;
  animation: slide-in-fade-in 0.5s ease-out;
}

/* Component animations - each component slides in and fades in */
.component-building {
  animation: component-appear 0.5s ease-out forwards;
  transform-origin: top center;
}

@keyframes component-appear {
  0% {
    opacity: 0;
    transform: translateY(20px) scale(0.95);
  }
  100% {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* Skeleton/wireframe effect for components being built */
.component-skeleton {
  position: relative;
  background: linear-gradient(
    90deg,
    color-mix(in srgb, var(--color-electric-blue) 10%, transparent) 0%,
    color-mix(in srgb, var(--color-electric-blue) 20%, transparent) 50%,
    color-mix(in srgb, var(--color-electric-blue) 10%, transparent) 100%
  );
  background-size: 200% 100%;
  animation: skeleton-shimmer 1.5s ease-in-out infinite;
  border-radius: 8px;
  overflow: hidden;
}

.component-skeleton::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(255, 255, 255, 0.1) 50%,
    transparent 100%
  );
  animation: skeleton-wave 2s linear infinite;
}

@keyframes skeleton-shimmer {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

@keyframes skeleton-wave {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

/* Component "materialization" effect - goes from skeleton to real */
.component-materializing {
  animation: component-materialize 0.6s ease-out forwards;
}

@keyframes component-materialize {
  0% {
    opacity: 0.6;
    filter: blur(4px) brightness(1.2);
  }
  100% {
    opacity: 1;
    filter: blur(0) brightness(1);
  }
}

/* Stagger animation for multiple components */
.component-building:nth-child(1) { animation-delay: 0s; }
.component-building:nth-child(2) { animation-delay: 0.1s; }
.component-building:nth-child(3) { animation-delay: 0.2s; }
.component-building:nth-child(4) { animation-delay: 0.3s; }
.component-building:nth-child(5) { animation-delay: 0.4s; }
.component-building:nth-child(n+6) { animation-delay: 0.5s; }

/* Slide in from top animation */
@keyframes slide-in-fade-in {
  0% {
    opacity: 0;
    transform: translateY(-10px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* "Assembly" indicator for specific component types */
.component-assembling {
  position: relative;
  border: 2px dashed color-mix(in srgb, var(--color-electric-blue) 40%, transparent);
  background: color-mix(in srgb, var(--color-electric-blue) 5%, transparent);
  animation: assembly-pulse 1s ease-in-out infinite;
}

@keyframes assembly-pulse {
  0%, 100% {
    border-color: color-mix(in srgb, var(--color-electric-blue) 40%, transparent);
    background: color-mix(in srgb, var(--color-electric-blue) 5%, transparent);
  }
  50% {
    border-color: color-mix(in srgb, var(--color-neon-purple) 40%, transparent);
    background: color-mix(in srgb, var(--color-neon-purple) 5%, transparent);
  }
}

/* Final completion flash */
.build-complete-flash {
  animation: completion-flash 0.8s ease-out;
}

@keyframes completion-flash {
  0% {
    box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.7);
  }
  50% {
    box-shadow: 0 0 40px 10px rgba(138, 101, 255, 0.6);
  }
  100% {
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
  }
}
